2019-07-21 00:59:47,330 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-21 00:59:47,356 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-21 00:59:47,362 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-21 00:59:47,364 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-21 00:59:47,366 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-21 00:59:50,245 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-21 00:59:50,246 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-21 00:59:50,248 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-21 00:59:50,249 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-21 00:59:50,251 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-21 08:39:36,496 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9624 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-21 08:39:36,500 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-21 08:39:36,500 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-21 08:39:41,979 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 6.523 seconds (JVM running for 8.961)
2019-07-21 08:40:15,472 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-21 08:40:15,504 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-21 08:40:15,548 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-21 08:40:15,548 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-21 08:40:15,656 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-21 08:40:46,401 ERROR (BaseController.java:285)- 系统异常:org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'message' on field 'count': rejected value []; codes [typeMismatch.message.count,typeMismatch.count,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [message.count,count]; arguments []; default message [count]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'int' for property 'count'; nested exception is java.lang.NumberFormatException: For input string: ""]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'message' on field 'count': rejected value []; codes [typeMismatch.message.count,typeMismatch.count,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [message.count,count]; arguments []; default message [count]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'int' for property 'count'; nested exception is java.lang.NumberFormatException: For input string: ""]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:164)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-21 08:40:48,065 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-21 08:40:48,069 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-21 08:40:48,073 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-21 08:40:48,073 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-21 08:40:48,077 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-21 21:21:10,171 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 5828 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-21 21:21:10,171 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-21 21:21:10,171 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-21 21:21:15,952 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 6.702 seconds (JVM running for 9.101)
2019-07-21 21:22:59,256 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-21 21:22:59,301 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-21 21:22:59,356 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-21 21:22:59,358 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-21 21:22:59,488 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-21 21:41:09,292 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-21 21:41:09,294 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-21 21:41:09,304 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-21 21:41:09,305 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-21 21:41:09,307 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-21 21:48:27,532 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-21 21:48:27,533 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-21 21:48:27,542 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-21 21:48:27,543 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-21 21:48:27,546 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-21 21:49:23,659 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-21 21:49:23,662 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-21 21:49:23,674 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-21 21:49:23,675 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-21 21:49:23,680 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-21 21:49:29,899 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-21 21:49:29,901 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-21 21:49:29,905 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-21 21:49:29,906 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-21 21:49:29,908 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-21 22:16:26,686 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-21 22:16:26,689 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-21 22:16:26,695 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-21 22:16:26,697 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-21 22:16:26,698 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-21 22:17:22,027 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-21 22:17:22,029 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-21 22:17:22,034 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-21 22:17:22,035 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-21 22:17:22,036 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-21 22:19:38,359 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-21 22:19:38,360 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-21 22:19:38,372 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-21 22:19:38,373 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-21 22:19:38,375 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-21 22:20:27,721 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-21 22:20:27,722 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-21 22:20:27,763 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-21 22:20:27,764 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-21 22:20:27,766 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-21 22:29:51,766 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-21 22:29:51,768 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-21 22:29:51,774 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-21 22:29:51,775 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-21 22:29:51,776 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-21 22:30:33,062 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-21 22:30:33,063 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-21 22:30:33,067 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-21 22:30:33,068 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-21 22:30:33,071 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-21 22:31:20,633 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-21 22:31:20,634 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-21 22:31:20,639 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-21 22:31:20,640 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-21 22:31:20,642 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-21 22:32:01,466 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-21 22:32:01,467 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-21 22:32:01,488 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-21 22:32:01,489 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-21 22:32:01,490 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-21 22:36:00,955 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-21 22:36:00,956 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-21 22:36:00,960 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-21 22:36:00,961 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-21 22:36:00,962 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-21 22:38:38,156 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-21 22:38:38,157 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-21 22:38:38,162 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-21 22:38:38,163 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-21 22:38:38,165 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-21 22:38:51,860 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-21 22:38:51,862 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-21 22:38:51,868 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-21 22:38:51,869 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-21 22:38:51,871 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-21 22:42:45,495 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-21 22:42:45,497 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-21 22:42:45,503 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-21 22:42:45,504 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-21 22:42:45,506 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-21 22:45:43,769 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-21 22:45:43,770 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-21 22:45:43,778 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-21 22:45:43,779 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-21 22:45:43,780 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-21 22:58:09,292 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-21 22:58:09,293 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-21 22:58:09,300 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-21 22:58:09,301 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-21 22:58:09,303 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-21 22:58:17,579 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-21 22:58:17,580 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-21 22:58:17,584 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-21 22:58:17,585 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-21 22:58:17,586 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-21 22:58:24,016 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-21 22:58:24,017 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-21 22:58:24,022 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-21 22:58:24,023 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-21 22:58:24,024 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
