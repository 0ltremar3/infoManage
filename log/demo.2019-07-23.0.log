2019-07-22 00:01:26,919 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 00:01:26,943 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 00:01:26,948 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 00:01:26,949 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-22 00:01:26,951 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-22 00:02:16,658 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 00:02:16,661 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 00:02:16,679 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 00:02:16,680 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-22 00:02:16,681 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-22 00:02:18,284 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 00:02:18,287 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 00:02:18,294 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 00:02:18,297 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-22 00:02:18,310 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-22 00:03:06,319 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 00:03:06,320 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 00:03:06,327 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 00:03:06,328 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-22 00:03:06,329 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-22 00:04:59,654 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 00:04:59,655 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 00:04:59,658 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 00:04:59,659 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-22 00:04:59,660 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-22 00:05:02,700 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 00:05:02,701 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 00:05:02,705 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 00:05:02,706 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-22 00:05:02,707 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-22 00:05:56,904 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 00:05:56,905 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 00:05:56,911 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 00:05:56,912 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-22 00:05:56,913 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-22 00:05:58,619 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 00:05:58,621 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 00:05:58,625 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 00:05:58,626 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-22 00:05:58,627 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-22 00:06:02,892 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 00:06:02,893 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 00:06:02,896 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 00:06:02,896 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-22 00:06:02,897 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-22 00:11:15,164 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 00:11:15,166 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 00:11:15,172 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 00:11:15,173 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-22 00:11:15,175 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-22 00:11:16,548 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:11:16,553 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 00:11:16,557 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:11:16,559 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }
}
2019-07-22 00:11:33,654 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:11:33,656 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 00:11:33,658 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:11:33,659 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }
}
2019-07-22 00:11:35,279 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 00:11:35,280 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 00:11:35,286 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 00:11:35,287 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-22 00:11:35,289 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-22 00:11:36,087 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:11:36,089 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 00:11:36,091 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:11:36,093 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }
}
2019-07-22 00:13:47,321 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:13:47,322 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 00:13:47,323 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:13:47,325 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }
}
2019-07-22 00:16:17,380 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:16:17,381 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 00:16:17,382 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:16:17,383 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }
}
2019-07-22 00:16:49,185 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:16:49,188 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 00:16:49,190 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:16:49,191 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }
}
2019-07-22 00:17:27,920 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:17:27,937 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 00:17:27,948 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:17:27,949 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }
}
2019-07-22 00:17:42,905 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:17:42,906 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 00:17:42,908 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:17:42,910 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }
}
2019-07-22 00:17:45,031 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:17:45,032 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 00:17:45,033 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:17:45,035 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }
}
2019-07-22 00:18:07,756 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:18:07,758 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 00:18:07,761 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:18:07,763 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }
}
2019-07-22 00:18:23,829 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:18:23,863 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 00:18:23,865 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:18:23,866 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }
}
2019-07-22 00:24:09,886 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 00:24:09,887 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 00:24:09,891 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 00:24:09,892 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-22 00:24:09,893 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-22 00:24:12,469 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:24:12,493 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 00:24:12,494 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:24:12,495 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }
}
2019-07-22 00:24:15,944 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 00:24:15,946 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 00:24:15,949 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 00:24:15,950 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-22 00:24:15,951 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-22 00:24:17,342 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:24:17,343 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 00:24:17,345 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:24:17,347 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }
}
2019-07-22 00:25:24,231 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 00:25:24,232 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 00:25:24,236 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 00:25:24,237 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-22 00:25:24,238 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-22 00:25:27,674 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:25:27,733 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 00:25:27,772 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:25:27,773 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }
}
2019-07-22 00:26:55,794 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:26:55,796 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 00:26:55,798 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:26:55,799 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }
}
2019-07-22 00:28:33,433 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 00:28:33,434 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 00:28:33,437 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 00:28:33,438 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-22 00:28:33,438 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-22 00:28:35,974 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:28:35,975 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 12(Integer)
2019-07-22 00:28:35,979 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:28:35,981 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }
}
2019-07-22 00:33:20,951 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:33:20,953 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 12(Integer)
2019-07-22 00:33:20,954 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:33:20,955 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }
}
2019-07-22 00:36:42,851 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:36:42,852 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 12(Integer)
2019-07-22 00:36:42,853 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:36:42,854 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }
}
2019-07-22 00:36:44,558 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 5828 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 00:36:44,558 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 00:36:44,559 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 00:36:45,964 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.465 seconds (JVM running for 11739.106)
2019-07-22 00:36:46,336 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 00:36:46,362 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 00:36:46,366 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 00:36:46,367 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-22 00:36:46,384 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563292800000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563292800000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1562083200000,
    "count" : 1
  } ]
}
2019-07-22 00:36:55,919 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:36:55,920 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 00:36:55,930 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:36:55,931 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562860800000,
    "count" : 0
  }
}
2019-07-22 00:39:23,447 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:39:23,448 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 00:39:23,451 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:39:23,453 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 0
  }
}
2019-07-22 00:40:35,325 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:40:35,326 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 00:40:35,327 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:40:35,329 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 0
  }
}
2019-07-22 00:44:53,946 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 00:44:53,947 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 00:44:53,949 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 00:44:53,954 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-22 00:44:53,957 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:44:53,958 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 00:44:53,959 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:44:53,961 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 0
  }
}
2019-07-22 00:44:58,594 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 00:44:58,595 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 00:44:58,598 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 00:44:58,599 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-22 00:44:58,600 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 1
  } ]
}
2019-07-22 00:45:01,535 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 00:45:01,536 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 00:45:01,536 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:45:01,538 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 00:45:01,543 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 5,
    "messageId" : 5,
    "content" : "你怎么了？",
    "writer" : "angel",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 8,
    "messageId" : 5,
    "content" : "可别想不开啊",
    "writer" : "okk",
    "writeDate" : 1563638400000
  } ]
}
2019-07-22 00:45:01,538 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 00:45:01,547 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:45:01,548 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }
}
2019-07-22 00:46:40,312 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 00:46:40,313 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 00:46:40,315 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 00:46:40,316 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 5,
    "messageId" : 5,
    "content" : "你怎么了？",
    "writer" : "angel",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 8,
    "messageId" : 5,
    "content" : "可别想不开啊",
    "writer" : "okk",
    "writeDate" : 1563638400000
  } ]
}
2019-07-22 00:46:40,317 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:46:40,318 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 00:46:40,322 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:46:40,325 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }
}
2019-07-22 00:48:28,343 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 00:48:28,344 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:48:28,344 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 00:48:28,345 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 00:48:28,346 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 00:48:28,348 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 5,
    "messageId" : 5,
    "content" : "你怎么了？",
    "writer" : "angel",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 8,
    "messageId" : 5,
    "content" : "可别想不开啊",
    "writer" : "okk",
    "writeDate" : 1563638400000
  } ]
}
2019-07-22 00:48:28,349 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:48:28,350 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }
}
2019-07-22 00:52:23,441 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 00:52:23,442 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:52:23,442 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 00:52:23,444 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 00:52:23,445 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 00:52:23,445 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:52:23,446 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 5,
    "messageId" : 5,
    "content" : "你怎么了？",
    "writer" : "angel",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 8,
    "messageId" : 5,
    "content" : "可别想不开啊",
    "writer" : "okk",
    "writeDate" : 1563638400000
  } ]
}
2019-07-22 00:52:23,446 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }
}
2019-07-22 00:53:01,270 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 00:53:01,271 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:53:01,272 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 00:53:01,272 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 00:53:01,273 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:53:01,273 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 00:53:01,274 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }
}
2019-07-22 00:53:01,274 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 5,
    "messageId" : 5,
    "content" : "你怎么了？",
    "writer" : "angel",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 8,
    "messageId" : 5,
    "content" : "可别想不开啊",
    "writer" : "okk",
    "writeDate" : 1563638400000
  } ]
}
2019-07-22 00:53:21,854 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:53:21,854 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 00:53:21,855 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 00:53:21,856 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 00:53:21,857 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:53:21,857 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }
}
2019-07-22 00:53:21,857 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 00:53:21,859 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 5,
    "messageId" : 5,
    "content" : "你怎么了？",
    "writer" : "angel",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 8,
    "messageId" : 5,
    "content" : "可别想不开啊",
    "writer" : "okk",
    "writeDate" : 1563638400000
  } ]
}
2019-07-22 00:53:30,826 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 00:53:30,827 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 00:53:30,828 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 00:53:30,829 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 5,
    "messageId" : 5,
    "content" : "你怎么了？",
    "writer" : "angel",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 8,
    "messageId" : 5,
    "content" : "可别想不开啊",
    "writer" : "okk",
    "writeDate" : 1563638400000
  } ]
}
2019-07-22 00:53:30,840 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:53:30,841 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 00:53:30,843 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:53:30,844 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }
}
2019-07-22 00:53:45,157 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 00:53:45,158 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 00:53:45,161 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 00:53:45,164 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 5,
    "messageId" : 5,
    "content" : "你怎么了？",
    "writer" : "angel",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 8,
    "messageId" : 5,
    "content" : "可别想不开啊",
    "writer" : "okk",
    "writeDate" : 1563638400000
  } ]
}
2019-07-22 00:53:45,169 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:53:45,170 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 00:53:45,171 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:53:45,172 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }
}
2019-07-22 00:53:52,823 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 00:53:52,823 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:53:52,824 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 00:53:52,824 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 00:53:52,825 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:53:52,825 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 00:53:52,826 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }
}
2019-07-22 00:53:52,826 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 5,
    "messageId" : 5,
    "content" : "你怎么了？",
    "writer" : "angel",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 8,
    "messageId" : 5,
    "content" : "可别想不开啊",
    "writer" : "okk",
    "writeDate" : 1563638400000
  } ]
}
2019-07-22 00:57:34,053 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 00:57:34,054 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 00:57:34,054 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:57:34,055 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 00:57:34,055 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 00:57:34,056 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:57:34,056 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 5,
    "messageId" : 5,
    "content" : "你怎么了？",
    "writer" : "angel",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 8,
    "messageId" : 5,
    "content" : "可别想不开啊",
    "writer" : "okk",
    "writeDate" : 1563638400000
  } ]
}
2019-07-22 00:57:34,057 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }
}
2019-07-22 00:57:43,762 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUE(0,? ,? ,? ,?) 
2019-07-22 00:57:43,763 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), null, null, null
2019-07-22 00:57:43,873 ERROR (BaseController.java:271)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/RevertMapper.xml
### The error may involve com.zryx.company.mapper.RevertMapper.addRevert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO revert VALUE(0,? ,? ,? ,?)
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy63.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy82.addRevert(Unknown Source)
	at com.zryx.company.service.imp.RevertServiceImpl.addRevert(RevertServiceImpl.java:26)
	at com.zryx.company.controller.RevertController.addRevert(RevertController.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor79.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy77.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-22 00:58:57,362 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 00:58:57,363 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 00:58:57,364 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 00:58:57,365 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 5,
    "messageId" : 5,
    "content" : "你怎么了？",
    "writer" : "angel",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 8,
    "messageId" : 5,
    "content" : "可别想不开啊",
    "writer" : "okk",
    "writeDate" : 1563638400000
  } ]
}
2019-07-22 00:58:57,382 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:58:57,383 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 00:58:57,383 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:58:57,385 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }
}
2019-07-22 00:59:00,771 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 00:59:00,772 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 00:59:00,773 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 00:59:00,775 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 5,
    "messageId" : 5,
    "content" : "你怎么了？",
    "writer" : "angel",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 8,
    "messageId" : 5,
    "content" : "可别想不开啊",
    "writer" : "okk",
    "writeDate" : 1563638400000
  } ]
}
2019-07-22 00:59:00,775 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 00:59:00,777 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 00:59:00,778 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 00:59:00,779 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }
}
2019-07-22 00:59:09,883 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUE(0,? ,? ,? ,?) 
2019-07-22 00:59:09,885 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), null, null, null
2019-07-22 00:59:09,888 ERROR (BaseController.java:271)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/RevertMapper.xml
### The error may involve com.zryx.company.mapper.RevertMapper.addRevert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO revert VALUE(0,? ,? ,? ,?)
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy63.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy82.addRevert(Unknown Source)
	at com.zryx.company.service.imp.RevertServiceImpl.addRevert(RevertServiceImpl.java:26)
	at com.zryx.company.controller.RevertController.addRevert(RevertController.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor79.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy77.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-22 00:59:13,785 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUE(0,? ,? ,? ,?) 
2019-07-22 00:59:13,787 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), null, null, null
2019-07-22 00:59:13,790 ERROR (BaseController.java:271)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/RevertMapper.xml
### The error may involve com.zryx.company.mapper.RevertMapper.addRevert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO revert VALUE(0,? ,? ,? ,?)
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy63.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy82.addRevert(Unknown Source)
	at com.zryx.company.service.imp.RevertServiceImpl.addRevert(RevertServiceImpl.java:26)
	at com.zryx.company.controller.RevertController.addRevert(RevertController.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor79.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy77.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-22 01:01:39,513 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 01:01:39,514 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 01:01:39,514 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 01:01:39,515 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 01:01:39,515 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 01:01:39,516 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 5,
    "messageId" : 5,
    "content" : "你怎么了？",
    "writer" : "angel",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 8,
    "messageId" : 5,
    "content" : "可别想不开啊",
    "writer" : "okk",
    "writeDate" : 1563638400000
  } ]
}
2019-07-22 01:01:39,516 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 01:01:39,517 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }
}
2019-07-22 01:01:46,405 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUE(0,? ,? ,? ,?) 
2019-07-22 01:01:46,406 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), null, null, null
2019-07-22 01:01:46,410 ERROR (BaseController.java:271)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/RevertMapper.xml
### The error may involve com.zryx.company.mapper.RevertMapper.addRevert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO revert VALUE(0,? ,? ,? ,?)
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy63.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy82.addRevert(Unknown Source)
	at com.zryx.company.service.imp.RevertServiceImpl.addRevert(RevertServiceImpl.java:26)
	at com.zryx.company.controller.RevertController.addRevert(RevertController.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor79.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy77.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-22 01:03:47,617 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 01:03:47,618 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 01:03:47,622 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 01:03:47,622 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-22 01:03:47,623 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 1
  } ]
}
2019-07-22 01:03:49,448 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 01:03:49,449 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 01:03:49,449 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 01:03:49,449 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 01:03:49,450 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 01:03:49,451 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 01:03:49,451 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-22 01:03:49,452 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 0
  }
}
2019-07-22 01:04:01,911 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUE(0,? ,? ,? ,?) 
2019-07-22 01:04:01,912 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), null, null, null
2019-07-22 01:04:01,915 ERROR (BaseController.java:271)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
### The error may exist in com/zryx/company/mapper/RevertMapper.xml
### The error may involve com.zryx.company.mapper.RevertMapper.addRevert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO revert VALUE(0,? ,? ,? ,?)
### Cause: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
; Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`)); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy63.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy82.addRevert(Unknown Source)
	at com.zryx.company.service.imp.RevertServiceImpl.addRevert(RevertServiceImpl.java:26)
	at com.zryx.company.controller.RevertController.addRevert(RevertController.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`company`.`revert`, CONSTRAINT `revert_ibfk_1` FOREIGN KEY (`messageId`) REFERENCES `message` (`messageId`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor79.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy77.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-22 01:04:06,290 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 01:04:06,291 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 01:04:06,294 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 01:04:06,295 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-22 01:04:06,296 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 1
  } ]
}
2019-07-22 01:04:12,404 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 01:04:12,405 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 01:04:12,408 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 01:04:12,408 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-22 01:04:12,409 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 1
  } ]
}
2019-07-22 01:05:09,235 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 01:05:09,236 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 01:05:09,239 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 01:05:09,239 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-22 01:05:09,240 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 1
  } ]
}
2019-07-22 01:05:11,554 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 01:05:11,555 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 01:05:11,555 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 12(Integer)
2019-07-22 01:05:11,555 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 12(Integer)
2019-07-22 01:05:11,556 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 01:05:11,556 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 01:05:11,557 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }
}
2019-07-22 01:05:11,557 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 2,
    "messageId" : 12,
    "content" : "你现在知道了没",
    "writer" : "jry",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 9,
    "messageId" : 12,
    "content" : "你的id好可爱*´∀`)´∀`)*´∀`)*´∀`)",
    "writer" : "bobo",
    "writeDate" : 1564070400000
  } ]
}
2019-07-22 01:05:13,747 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 01:05:13,747 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 01:05:13,750 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 01:05:13,751 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-22 01:05:13,751 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 1
  } ]
}
2019-07-22 01:05:14,846 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 01:05:14,847 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 01:05:14,847 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 16(Integer)
2019-07-22 01:05:14,848 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 16(Integer)
2019-07-22 01:05:14,849 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 01:05:14,849 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 01:05:14,849 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 6,
    "messageId" : 16,
    "content" : "这都说的啥",
    "writer" : "angel",
    "writeDate" : 1563552000000
  } ]
}
2019-07-22 01:05:14,850 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 1
  }
}
2019-07-22 01:05:27,309 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUE(0,? ,? ,? ,?) 
2019-07-22 01:05:27,313 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 16(Integer), 好吧(String), jry(String), 2019-07-25 00:00:00.0(Timestamp)
2019-07-22 01:05:27,314 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 01:05:27,315 DEBUG (RevertController.java:30)- Json==>{
  "msg" : "回复成功！",
  "code" : 0,
  "data" : "null"
}
2019-07-22 01:05:28,543 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 01:05:28,545 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 16(Integer)
2019-07-22 01:05:28,546 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 01:05:28,547 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 6,
    "messageId" : 16,
    "content" : "这都说的啥",
    "writer" : "angel",
    "writeDate" : 1563552000000
  }, {
    "revertId" : 15,
    "messageId" : 16,
    "content" : "好吧",
    "writer" : "jry",
    "writeDate" : 1563984000000
  } ]
}
2019-07-22 01:08:07,448 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 01:08:07,449 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 01:08:07,452 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 01:08:07,453 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 5,
    "messageId" : 5,
    "content" : "你怎么了？",
    "writer" : "angel",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 8,
    "messageId" : 5,
    "content" : "可别想不开啊",
    "writer" : "okk",
    "writeDate" : 1563638400000
  } ]
}
2019-07-22 01:08:07,451 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 01:08:07,456 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 01:08:07,458 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 01:08:07,459 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }
}
2019-07-22 01:08:44,904 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 01:08:44,904 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 01:08:44,905 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 01:08:44,906 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 01:08:44,906 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 01:08:44,907 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 5,
    "messageId" : 5,
    "content" : "你怎么了？",
    "writer" : "angel",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 8,
    "messageId" : 5,
    "content" : "可别想不开啊",
    "writer" : "okk",
    "writeDate" : 1563638400000
  } ]
}
2019-07-22 01:08:44,907 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 01:08:44,908 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }
}
2019-07-22 01:09:52,592 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 01:09:52,593 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 01:09:52,595 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 01:09:52,595 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 01:09:52,596 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 5,
    "messageId" : 5,
    "content" : "你怎么了？",
    "writer" : "angel",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 8,
    "messageId" : 5,
    "content" : "可别想不开啊",
    "writer" : "okk",
    "writeDate" : 1563638400000
  } ]
}
2019-07-22 01:09:52,596 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 01:09:52,597 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 01:09:52,599 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }
}
2019-07-22 01:10:04,302 ERROR (BaseController.java:285)- 系统异常:org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'revert' on field 'messageId': rejected value [,27]; codes [typeMismatch.revert.messageId,typeMismatch.messageId,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [revert.messageId,messageId]; arguments []; default message [messageId]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'int' for property 'messageId'; nested exception is java.lang.NumberFormatException: For input string: ",27"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'revert' on field 'messageId': rejected value [,27]; codes [typeMismatch.revert.messageId,typeMismatch.messageId,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [revert.messageId,messageId]; arguments []; default message [messageId]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'int' for property 'messageId'; nested exception is java.lang.NumberFormatException: For input string: ",27"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:164)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-22 01:15:50,162 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 01:15:50,163 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 01:15:50,164 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 01:15:50,165 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 01:15:50,165 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 5,
    "messageId" : 5,
    "content" : "你怎么了？",
    "writer" : "angel",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 8,
    "messageId" : 5,
    "content" : "可别想不开啊",
    "writer" : "okk",
    "writeDate" : 1563638400000
  } ]
}
2019-07-22 01:15:50,165 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 01:15:50,166 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 01:15:50,167 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }
}
2019-07-22 01:16:14,530 ERROR (BaseController.java:285)- 系统异常:org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'revert' on field 'messageId': rejected value [,27]; codes [typeMismatch.revert.messageId,typeMismatch.messageId,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [revert.messageId,messageId]; arguments []; default message [messageId]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'int' for property 'messageId'; nested exception is java.lang.NumberFormatException: For input string: ",27"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'revert' on field 'messageId': rejected value [,27]; codes [typeMismatch.revert.messageId,typeMismatch.messageId,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [revert.messageId,messageId]; arguments []; default message [messageId]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'int' for property 'messageId'; nested exception is java.lang.NumberFormatException: For input string: ",27"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:164)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-22 01:20:09,538 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 01:20:09,543 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 01:20:09,539 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 01:20:09,546 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 01:20:09,547 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 01:20:09,548 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }
}
2019-07-22 01:20:09,550 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 01:20:09,552 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 5,
    "messageId" : 5,
    "content" : "你怎么了？",
    "writer" : "angel",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 8,
    "messageId" : 5,
    "content" : "可别想不开啊",
    "writer" : "okk",
    "writeDate" : 1563638400000
  } ]
}
2019-07-22 01:21:15,319 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 01:21:15,320 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 01:21:15,320 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 01:21:15,321 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 01:21:15,321 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 01:21:15,322 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 01:21:15,322 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 5,
    "messageId" : 5,
    "content" : "你怎么了？",
    "writer" : "angel",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 8,
    "messageId" : 5,
    "content" : "可别想不开啊",
    "writer" : "okk",
    "writeDate" : 1563638400000
  } ]
}
2019-07-22 01:21:15,323 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }
}
2019-07-22 01:21:21,486 ERROR (BaseController.java:285)- 系统异常:org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'revert' on field 'messageId': rejected value [,27]; codes [typeMismatch.revert.messageId,typeMismatch.messageId,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [revert.messageId,messageId]; arguments []; default message [messageId]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'int' for property 'messageId'; nested exception is java.lang.NumberFormatException: For input string: ",27"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'revert' on field 'messageId': rejected value [,27]; codes [typeMismatch.revert.messageId,typeMismatch.messageId,typeMismatch.int,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [revert.messageId,messageId]; arguments []; default message [messageId]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'int' for property 'messageId'; nested exception is java.lang.NumberFormatException: For input string: ",27"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:164)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:126)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-22 01:23:23,445 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 01:23:23,446 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 01:23:23,447 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 01:23:23,448 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 5,
    "messageId" : 5,
    "content" : "你怎么了？",
    "writer" : "angel",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 8,
    "messageId" : 5,
    "content" : "可别想不开啊",
    "writer" : "okk",
    "writeDate" : 1563638400000
  } ]
}
2019-07-22 01:23:23,450 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 01:23:23,452 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 01:23:23,454 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 01:23:23,455 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }
}
2019-07-22 01:23:33,673 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUE(0,? ,? ,? ,?) 
2019-07-22 01:23:33,674 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer), 我可以吗(String), okk(String), 2019-07-22 00:00:00.0(Timestamp)
2019-07-22 01:23:33,675 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 01:23:33,676 DEBUG (RevertController.java:30)- Json==>{
  "msg" : "回复成功！",
  "code" : 0,
  "data" : "null"
}
2019-07-22 01:23:35,093 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 01:23:35,095 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 01:23:35,097 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-22 01:23:35,098 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 5,
    "messageId" : 5,
    "content" : "你怎么了？",
    "writer" : "angel",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 8,
    "messageId" : 5,
    "content" : "可别想不开啊",
    "writer" : "okk",
    "writeDate" : 1563638400000
  }, {
    "revertId" : 16,
    "messageId" : 5,
    "content" : "我可以吗",
    "writer" : "okk",
    "writeDate" : 1563724800000
  } ]
}
2019-07-22 01:24:08,663 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 01:24:08,665 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 01:24:08,666 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-22 01:24:08,667 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 5,
    "messageId" : 5,
    "content" : "你怎么了？",
    "writer" : "angel",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 8,
    "messageId" : 5,
    "content" : "可别想不开啊",
    "writer" : "okk",
    "writeDate" : 1563638400000
  }, {
    "revertId" : 16,
    "messageId" : 5,
    "content" : "我可以吗",
    "writer" : "okk",
    "writeDate" : 1563724800000
  } ]
}
2019-07-22 01:24:08,674 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 01:24:08,675 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 01:24:08,676 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 01:24:08,678 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }
}
2019-07-22 01:24:47,636 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUE(0,? ,? ,? ,?) 
2019-07-22 01:24:47,637 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer), 崽种，直视我(String), bobo(String), 2019-07-26 00:00:00.0(Timestamp)
2019-07-22 01:24:47,639 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 01:24:47,640 DEBUG (RevertController.java:30)- Json==>{
  "msg" : "回复成功！",
  "code" : 0,
  "data" : "null"
}
2019-07-22 01:24:48,965 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 01:24:48,966 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 01:24:48,968 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 01:24:48,969 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 5,
    "messageId" : 5,
    "content" : "你怎么了？",
    "writer" : "angel",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 8,
    "messageId" : 5,
    "content" : "可别想不开啊",
    "writer" : "okk",
    "writeDate" : 1563638400000
  }, {
    "revertId" : 16,
    "messageId" : 5,
    "content" : "我可以吗",
    "writer" : "okk",
    "writeDate" : 1563724800000
  }, {
    "revertId" : 17,
    "messageId" : 5,
    "content" : "崽种，直视我",
    "writer" : "bobo",
    "writeDate" : 1564070400000
  } ]
}
2019-07-22 01:25:31,455 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 01:25:31,456 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 01:25:31,458 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 01:25:31,459 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 01:25:31,460 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 5,
    "messageId" : 5,
    "content" : "你怎么了？",
    "writer" : "angel",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 8,
    "messageId" : 5,
    "content" : "可别想不开啊",
    "writer" : "okk",
    "writeDate" : 1563638400000
  }, {
    "revertId" : 16,
    "messageId" : 5,
    "content" : "我可以吗",
    "writer" : "okk",
    "writeDate" : 1563724800000
  }, {
    "revertId" : 17,
    "messageId" : 5,
    "content" : "崽种，直视我",
    "writer" : "bobo",
    "writeDate" : 1564070400000
  } ]
}
2019-07-22 01:25:31,460 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 01:25:31,461 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 01:25:31,463 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }
}
2019-07-22 01:25:34,055 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 01:25:34,057 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 01:25:34,059 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 01:25:34,059 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 01:25:34,061 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 5,
    "messageId" : 5,
    "content" : "你怎么了？",
    "writer" : "angel",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 8,
    "messageId" : 5,
    "content" : "可别想不开啊",
    "writer" : "okk",
    "writeDate" : 1563638400000
  }, {
    "revertId" : 16,
    "messageId" : 5,
    "content" : "我可以吗",
    "writer" : "okk",
    "writeDate" : 1563724800000
  }, {
    "revertId" : 17,
    "messageId" : 5,
    "content" : "崽种，直视我",
    "writer" : "bobo",
    "writeDate" : 1564070400000
  } ]
}
2019-07-22 01:25:34,061 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 01:25:34,063 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 01:25:34,064 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }
}
2019-07-22 01:25:56,340 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUE(0,? ,? ,? ,?) 
2019-07-22 01:25:56,342 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer), 344(String), (String), null
2019-07-22 01:25:56,344 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 01:25:56,344 DEBUG (RevertController.java:30)- Json==>{
  "msg" : "回复成功！",
  "code" : 0,
  "data" : "null"
}
2019-07-22 01:25:57,827 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 01:25:57,829 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 01:25:57,831 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 01:25:57,834 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 18,
    "messageId" : 5,
    "content" : "344",
    "writer" : "",
    "writeDate" : null
  }, {
    "revertId" : 5,
    "messageId" : 5,
    "content" : "你怎么了？",
    "writer" : "angel",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 8,
    "messageId" : 5,
    "content" : "可别想不开啊",
    "writer" : "okk",
    "writeDate" : 1563638400000
  }, {
    "revertId" : 16,
    "messageId" : 5,
    "content" : "我可以吗",
    "writer" : "okk",
    "writeDate" : 1563724800000
  }, {
    "revertId" : 17,
    "messageId" : 5,
    "content" : "崽种，直视我",
    "writer" : "bobo",
    "writeDate" : 1564070400000
  } ]
}
2019-07-22 01:26:01,893 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 01:26:01,895 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 01:26:01,896 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 01:26:01,897 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 01:26:01,897 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 01:26:01,898 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 01:26:01,899 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }
}
2019-07-22 01:26:01,900 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 18,
    "messageId" : 5,
    "content" : "344",
    "writer" : "",
    "writeDate" : null
  }, {
    "revertId" : 5,
    "messageId" : 5,
    "content" : "你怎么了？",
    "writer" : "angel",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 8,
    "messageId" : 5,
    "content" : "可别想不开啊",
    "writer" : "okk",
    "writeDate" : 1563638400000
  }, {
    "revertId" : 16,
    "messageId" : 5,
    "content" : "我可以吗",
    "writer" : "okk",
    "writeDate" : 1563724800000
  }, {
    "revertId" : 17,
    "messageId" : 5,
    "content" : "崽种，直视我",
    "writer" : "bobo",
    "writeDate" : 1564070400000
  } ]
}
2019-07-22 01:26:17,626 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 01:26:17,627 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 01:26:17,630 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 01:26:17,632 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-22 01:26:17,634 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 2
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 1
  } ]
}
2019-07-22 01:26:19,489 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 01:26:19,490 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 01:26:19,490 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 01:26:19,491 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 01:26:19,491 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 01:26:19,492 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 18,
    "messageId" : 5,
    "content" : "344",
    "writer" : "",
    "writeDate" : null
  }, {
    "revertId" : 5,
    "messageId" : 5,
    "content" : "你怎么了？",
    "writer" : "angel",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 8,
    "messageId" : 5,
    "content" : "可别想不开啊",
    "writer" : "okk",
    "writeDate" : 1563638400000
  }, {
    "revertId" : 16,
    "messageId" : 5,
    "content" : "我可以吗",
    "writer" : "okk",
    "writeDate" : 1563724800000
  }, {
    "revertId" : 17,
    "messageId" : 5,
    "content" : "崽种，直视我",
    "writer" : "bobo",
    "writeDate" : 1564070400000
  } ]
}
2019-07-22 01:26:19,492 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 01:26:19,493 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 5
  }
}
2019-07-22 08:24:23,036 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 10660 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 08:24:23,046 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 08:24:23,046 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 08:24:28,060 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 6.384 seconds (JVM running for 9.556)
2019-07-22 08:24:45,183 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 08:24:45,230 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:24:45,280 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 08:24:45,281 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-22 08:24:45,400 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 5
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  } ]
}
2019-07-22 08:24:48,050 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 08:24:48,051 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 08:24:48,054 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 08:24:48,054 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer)
2019-07-22 08:24:48,058 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 08:24:48,059 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }
}
2019-07-22 08:24:48,061 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 08:24:48,064 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 5,
    "messageId" : 5,
    "content" : "你怎么了？",
    "writer" : "angel",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 8,
    "messageId" : 5,
    "content" : "可别想不开啊",
    "writer" : "okk",
    "writeDate" : 1563638400000
  }, {
    "revertId" : 16,
    "messageId" : 5,
    "content" : "我可以吗",
    "writer" : "okk",
    "writeDate" : 1563724800000
  }, {
    "revertId" : 17,
    "messageId" : 5,
    "content" : "崽种，直视我",
    "writer" : "bobo",
    "writeDate" : 1564070400000
  } ]
}
2019-07-22 08:25:02,906 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 08:25:02,907 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:25:02,911 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 08:25:02,912 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-22 08:25:02,914 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  } ]
}
2019-07-22 08:25:08,897 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 08:25:08,897 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 08:25:08,898 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 08:25:08,898 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 08:25:08,899 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 08:25:08,900 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 08:25:08,901 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 0
  }
}
2019-07-22 08:25:08,905 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-22 08:25:24,948 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUE(0,? ,? ,? ,?) 
2019-07-22 08:25:24,951 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer), 有道理(String), bobo(String), 2019-07-23 00:00:00.0(Timestamp)
2019-07-22 08:25:24,954 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 08:25:24,955 DEBUG (RevertController.java:30)- Json==>{
  "msg" : "回复成功！",
  "code" : 0,
  "data" : "null"
}
2019-07-22 08:25:26,191 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 08:25:26,194 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 08:25:26,197 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 08:25:26,198 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 18,
    "messageId" : 2,
    "content" : "有道理",
    "writer" : "bobo",
    "writeDate" : 1563811200000
  } ]
}
2019-07-22 08:25:28,346 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 08:25:28,347 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:25:28,355 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 08:25:28,356 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-22 08:25:28,359 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 0
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  } ]
}
2019-07-22 08:28:08,904 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 08:28:08,905 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:28:08,909 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 08:28:08,910 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-22 08:28:08,911 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 1
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  } ]
}
2019-07-22 08:37:06,954 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 10660 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 08:37:06,954 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 08:37:06,955 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 08:37:08,830 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.975 seconds (JVM running for 770.323)
2019-07-22 08:39:21,089 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 08:39:21,147 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:39:21,168 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-22 08:39:21,169 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 5
2019-07-22 08:39:21,181 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 1
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  } ]
}
2019-07-22 08:39:41,561 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO message VALUE(0,? ,? ,? ,? ,0) 
2019-07-22 08:39:41,563 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), 我肥来了(String), jry(String), 2019-07-23 00:00:00.0(Timestamp)
2019-07-22 08:39:41,564 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 08:39:45,759 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 08:39:45,762 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:39:45,767 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 08:39:45,769 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 6
2019-07-22 08:39:45,771 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 1
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  }, {
    "messageId" : 17,
    "title" : "hello",
    "content" : "我肥来了",
    "writer" : "jry",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-22 08:39:48,664 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 08:39:48,665 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:39:48,675 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 08:39:48,676 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 6
2019-07-22 08:39:48,679 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 1
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  }, {
    "messageId" : 17,
    "title" : "hello",
    "content" : "我肥来了",
    "writer" : "jry",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-22 08:39:51,212 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 08:39:51,212 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 08:39:51,213 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-22 08:39:51,214 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-22 08:39:51,214 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 08:39:51,218 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 08:39:51,218 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-22 08:39:51,221 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 17,
    "title" : "hello",
    "content" : "我肥来了",
    "writer" : "jry",
    "writeDate" : 1563811200000,
    "count" : 0
  }
}
2019-07-22 08:39:54,896 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 08:39:54,897 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:39:54,901 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 08:39:54,903 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 6
2019-07-22 08:39:54,905 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 1
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  }, {
    "messageId" : 17,
    "title" : "hello",
    "content" : "我肥来了",
    "writer" : "jry",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-22 08:40:29,760 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 08:40:29,760 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 08:40:29,761 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-22 08:40:29,761 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-22 08:40:29,763 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 08:40:29,763 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 08:40:29,765 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-22 08:40:29,765 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 17,
    "title" : "hello",
    "content" : "我肥来了",
    "writer" : "jry",
    "writeDate" : 1563811200000,
    "count" : 0
  }
}
2019-07-22 08:40:31,933 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 08:40:31,934 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:40:31,940 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 08:40:31,941 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 6
2019-07-22 08:40:31,942 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 1
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  }, {
    "messageId" : 17,
    "title" : "hello",
    "content" : "我肥来了",
    "writer" : "jry",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-22 08:40:55,315 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 08:40:55,316 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:40:55,321 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 08:40:55,322 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 6
2019-07-22 08:40:55,324 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 1
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  }, {
    "messageId" : 17,
    "title" : "hello",
    "content" : "我肥来了",
    "writer" : "jry",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-22 08:42:30,874 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 08:42:30,875 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:42:30,879 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 08:42:30,880 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 6
2019-07-22 08:42:30,881 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 1
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  }, {
    "messageId" : 17,
    "title" : "hello",
    "content" : "我肥来了",
    "writer" : "jry",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-22 08:42:46,251 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 08:42:46,252 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:42:46,256 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 08:42:46,257 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 6
2019-07-22 08:42:46,258 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 1
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  }, {
    "messageId" : 17,
    "title" : "hello",
    "content" : "我肥来了",
    "writer" : "jry",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-22 08:42:48,177 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 08:42:48,177 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 08:42:48,178 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 08:42:48,178 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 08:42:48,180 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-22 08:42:48,180 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 08:42:48,181 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }
}
2019-07-22 08:42:48,184 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writeDate" : 1565193600000
  }, {
    "revertId" : 3,
    "messageId" : 1,
    "content" : "我觉得应该是小米的，才200多块钱",
    "writer" : "ruok",
    "writeDate" : 1566576000000
  }, {
    "revertId" : 4,
    "messageId" : 1,
    "content" : "现在mp4都挺便宜的了，大家都用手机看，楼主随便买都行",
    "writer" : "路人",
    "writeDate" : 1567267200000
  } ]
}
2019-07-22 08:42:54,310 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 08:42:54,311 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:42:54,316 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 08:42:54,317 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 6
2019-07-22 08:42:54,318 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 1
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  }, {
    "messageId" : 17,
    "title" : "hello",
    "content" : "我肥来了",
    "writer" : "jry",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-22 08:55:05,356 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users; 
2019-07-22 08:55:05,357 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:55:05,368 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 08:55:05,370 DEBUG (UsersController.java:22)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 4,
    "userName" : "balr",
    "password" : "balr",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "雷猴",
    "password" : "leihou",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "hello",
    "password" : "hello",
    "status" : 0
  } ]
}
2019-07-22 08:55:10,439 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users; 
2019-07-22 08:55:10,441 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 08:55:10,443 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 08:55:10,444 DEBUG (UsersController.java:22)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 4,
    "userName" : "balr",
    "password" : "balr",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "雷猴",
    "password" : "leihou",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "hello",
    "password" : "hello",
    "status" : 0
  } ]
}
2019-07-22 10:38:14,814 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 10660 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 10:38:14,815 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 10:38:14,815 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 10:38:15,940 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.173 seconds (JVM running for 8037.432)
2019-07-22 10:40:37,315 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 10660 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 10:40:37,316 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 10:40:37,316 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 10:40:38,385 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.111 seconds (JVM running for 8179.877)
2019-07-22 10:57:25,497 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users; 
2019-07-22 10:57:25,501 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 10:57:25,503 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 10:57:25,513 DEBUG (UsersController.java:22)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 4,
    "userName" : "balr",
    "password" : "balr",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "雷猴",
    "password" : "leihou",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "hello",
    "password" : "hello",
    "status" : 0
  } ]
}
2019-07-22 10:57:29,021 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 10:57:29,022 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 10:57:29,028 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 10:57:29,029 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 6
2019-07-22 10:57:29,034 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 1
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  }, {
    "messageId" : 17,
    "title" : "hello",
    "content" : "我肥来了",
    "writer" : "jry",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-22 11:14:07,376 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 10660 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 11:14:07,376 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 11:14:07,376 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 11:14:09,009 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.695 seconds (JVM running for 10190.501)
2019-07-22 11:14:46,586 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 10660 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 11:14:46,586 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 11:14:46,587 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 11:14:48,016 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.471 seconds (JVM running for 10229.509)
2019-07-22 11:27:34,676 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 11:27:34,718 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 11:27:34,722 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 11:27:34,722 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 6
2019-07-22 11:27:34,736 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 1
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  }, {
    "messageId" : 17,
    "title" : "hello",
    "content" : "我肥来了",
    "writer" : "jry",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-22 11:42:08,708 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 10660 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 11:42:08,709 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 11:42:08,709 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 11:42:10,067 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.407 seconds (JVM running for 11871.559)
2019-07-22 11:42:33,303 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 10660 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 11:42:33,303 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 11:42:33,304 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 11:42:34,867 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.616 seconds (JVM running for 11896.36)
2019-07-22 11:43:23,393 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 10660 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 11:43:23,393 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 11:43:23,394 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 11:43:24,585 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.227 seconds (JVM running for 11946.077)
2019-07-22 11:44:40,369 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 11:44:40,375 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 11:44:40,377 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 11:44:40,383 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 11:44:40,386 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 2(Integer)
2019-07-22 11:44:40,390 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 11:44:40,400 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 1
  }
}
2019-07-22 11:44:40,403 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 18,
    "messageId" : 2,
    "content" : "有道理",
    "writer" : "bobo",
    "writeDate" : 1563811200000
  } ]
}
2019-07-22 11:44:42,839 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 11:44:42,840 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 11:44:42,844 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 11:44:42,844 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 6
2019-07-22 11:44:42,846 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 1
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  }, {
    "messageId" : 17,
    "title" : "hello",
    "content" : "我肥来了",
    "writer" : "jry",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-22 11:44:44,527 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 11:44:44,527 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 11:44:44,528 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 12(Integer)
2019-07-22 11:44:44,529 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 12(Integer)
2019-07-22 11:44:44,530 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 11:44:44,531 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-22 11:44:44,533 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 2,
    "messageId" : 12,
    "content" : "你现在知道了没",
    "writer" : "jry",
    "writeDate" : 1563465600000
  }, {
    "revertId" : 9,
    "messageId" : 12,
    "content" : "你的id好可爱*´∀`)´∀`)*´∀`)*´∀`)",
    "writer" : "bobo",
    "writeDate" : 1564070400000
  } ]
}
2019-07-22 11:44:44,533 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }
}
2019-07-22 11:44:45,195 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 11:44:45,195 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 11:44:45,201 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 11:44:45,203 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 6
2019-07-22 11:44:45,204 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 1
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  }, {
    "messageId" : 17,
    "title" : "hello",
    "content" : "我肥来了",
    "writer" : "jry",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-22 11:44:46,228 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 11:44:46,228 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 11:44:46,229 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-22 11:44:46,229 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 17(Integer)
2019-07-22 11:44:46,229 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 11:44:46,230 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 11:44:46,232 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 17,
    "title" : "hello",
    "content" : "我肥来了",
    "writer" : "jry",
    "writeDate" : 1563811200000,
    "count" : 0
  }
}
2019-07-22 11:44:46,233 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-22 11:44:49,503 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 11:44:49,505 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 11:44:49,510 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 11:44:49,511 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 6
2019-07-22 11:44:49,514 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 1
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  }, {
    "messageId" : 17,
    "title" : "hello",
    "content" : "我肥来了",
    "writer" : "jry",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-22 11:44:54,007 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 11:44:54,008 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 11:44:54,011 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 11:44:54,012 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 6
2019-07-22 11:44:54,012 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 1
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  }, {
    "messageId" : 17,
    "title" : "hello",
    "content" : "我肥来了",
    "writer" : "jry",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-22 11:47:58,482 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 10660 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 11:47:58,483 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 11:47:58,483 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 11:48:00,231 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.876 seconds (JVM running for 12221.723)
2019-07-22 11:50:14,879 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 11:50:14,912 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 11:50:14,947 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 11:50:14,947 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 6
2019-07-22 11:50:14,959 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 1
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  }, {
    "messageId" : 17,
    "title" : "hello",
    "content" : "我肥来了",
    "writer" : "jry",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-22 12:04:28,795 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 12:04:28,796 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 12:04:28,800 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 12:04:28,801 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 6
2019-07-22 12:04:28,802 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 1
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  }, {
    "messageId" : 17,
    "title" : "hello",
    "content" : "我肥来了",
    "writer" : "jry",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-22 12:04:31,433 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users; 
2019-07-22 12:04:31,434 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 12:04:31,436 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 12:04:31,438 DEBUG (UsersController.java:22)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }, {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }, {
    "userId" : 3,
    "userName" : "bobo",
    "password" : "bobo",
    "status" : 0
  }, {
    "userId" : 4,
    "userName" : "balr",
    "password" : "balr",
    "status" : 0
  }, {
    "userId" : 5,
    "userName" : "雷猴",
    "password" : "leihou",
    "status" : 1
  }, {
    "userId" : 7,
    "userName" : "hello",
    "password" : "hello",
    "status" : 0
  } ]
}
2019-07-22 12:04:55,549 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 12:04:55,550 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 12:04:55,559 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 12:04:55,559 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 6
2019-07-22 12:04:55,562 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 1
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  }, {
    "messageId" : 17,
    "title" : "hello",
    "content" : "我肥来了",
    "writer" : "jry",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-22 12:52:53,280 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 5608 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 12:52:53,295 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 12:52:53,295 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 12:52:57,077 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 5.735 seconds (JVM running for 8.371)
2019-07-22 12:56:21,406 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 12:56:21,442 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 12:56:21,482 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 12:56:21,566 DEBUG (UsersController.java:30)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }
}
2019-07-22 12:56:28,499 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 12:56:28,503 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), 11(String)
2019-07-22 12:56:28,507 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 12:56:28,515 DEBUG (UsersController.java:30)- Json-->{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-22 13:06:18,969 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 13:06:18,973 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 13:06:18,977 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 13:06:18,977 DEBUG (UsersController.java:30)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }
}
2019-07-22 13:08:10,619 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 13:08:10,619 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 13:08:10,627 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 13:08:10,627 DEBUG (UsersController.java:30)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }
}
2019-07-22 14:01:58,599 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 4540 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 14:01:58,604 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 14:01:58,605 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 14:02:05,037 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 7.346 seconds (JVM running for 10.122)
2019-07-22 14:45:22,833 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 14:45:22,867 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 14:45:22,904 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 14:47:56,431 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 14:47:56,432 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 14:47:56,435 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:01:45,196 INFO (StartupInfoLogger.java:50)- Starting UserMapperTest on AMB0E378IIS4OL4 with PID 1700 (started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 15:01:45,197 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 15:01:45,198 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 15:01:53,651 INFO (StartupInfoLogger.java:59)- Started UserMapperTest in 9.858 seconds (JVM running for 12.115)
2019-07-22 15:01:54,954 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 15:01:55,019 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 15:01:55,180 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:02:18,079 INFO (StartupInfoLogger.java:50)- Starting UserMapperTest on AMB0E378IIS4OL4 with PID 7748 (started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 15:02:18,081 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 15:02:18,082 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 15:02:25,321 INFO (StartupInfoLogger.java:59)- Started UserMapperTest in 8.894 seconds (JVM running for 10.987)
2019-07-22 15:02:26,448 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 15:02:26,522 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 15:02:26,643 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:03:06,119 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 4540 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 15:03:06,120 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 15:03:06,120 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 15:03:07,624 INFO (StartupInfoLogger.java:50)- Starting UserMapperTest on AMB0E378IIS4OL4 with PID 4496 (started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 15:03:07,630 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 15:03:07,632 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 15:03:12,301 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 6.26 seconds (JVM running for 3677.4)
2019-07-22 15:03:16,162 INFO (StartupInfoLogger.java:59)- Started UserMapperTest in 9.635 seconds (JVM running for 12.764)
2019-07-22 15:03:17,552 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 15:03:17,664 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 15:03:17,807 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:04:36,886 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 15:04:36,888 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 15:04:36,889 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:06:53,518 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 15:06:53,520 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 15:06:53,524 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:07:10,578 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 15:07:10,579 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 15:07:10,594 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:07:52,817 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 15:07:52,818 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 15:07:52,819 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:07:59,782 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 15:07:59,788 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 15:07:59,790 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:08:19,508 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 15:08:19,513 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), 11(String)
2019-07-22 15:08:19,516 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 15:08:21,399 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 15:08:21,417 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: (String), (String)
2019-07-22 15:08:21,440 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 15:08:29,592 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 15:08:29,595 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), 22(String)
2019-07-22 15:08:29,597 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 15:14:52,036 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 15:14:52,038 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 15:14:52,041 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:20:43,847 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 4540 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 15:20:43,848 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 15:20:43,848 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 15:20:44,823 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.044 seconds (JVM running for 4729.911)
2019-07-22 15:21:14,699 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 4540 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 15:21:14,700 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 15:21:14,701 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 15:21:16,733 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 2.082 seconds (JVM running for 4761.818)
2019-07-22 15:21:27,100 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 15:21:27,105 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 15:21:27,108 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:22:02,470 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 15:22:02,472 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 15:22:02,475 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:22:34,048 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 1528 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 15:22:34,064 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 15:22:34,065 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 15:22:38,676 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 5.372 seconds (JVM running for 7.242)
2019-07-22 15:22:49,362 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 15:22:49,408 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 15:22:49,436 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:24:12,485 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 15:24:12,487 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 15:24:12,490 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:27:46,637 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 15:27:46,638 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 15:27:46,641 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:27:46,674 DEBUG (UsersController.java:30)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }
}
2019-07-22 15:28:40,024 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 15:28:40,026 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 15:28:40,030 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:28:40,031 DEBUG (UsersController.java:30)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }
}
2019-07-22 15:29:47,989 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 15:29:47,991 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 15:29:47,993 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:30:07,460 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 15:30:07,463 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 15:30:07,465 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:30:14,481 ERROR (BaseController.java:285)- 系统异常:null
java.lang.NullPointerException: null
	at com.zryx.company.controller.ChatController.sendChat(ChatController.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-22 15:31:39,342 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 6476 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 15:31:39,376 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 15:31:39,377 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 15:31:43,402 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 4.774 seconds (JVM running for 6.67)
2019-07-22 15:32:00,085 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 15:32:00,118 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 15:32:00,146 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:33:18,255 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 15:33:18,257 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 15:33:18,258 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:34:12,280 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9052 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 15:34:12,287 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 15:34:12,288 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 15:34:16,488 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 5.347 seconds (JVM running for 6.859)
2019-07-22 15:34:38,169 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 15:34:38,207 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 15:34:38,235 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:35:02,826 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 15:35:02,827 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 15:35:02,830 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:37:40,359 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 15:37:40,361 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 15:37:40,364 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:37:50,898 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 15:37:50,906 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 15:37:50,909 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:43:10,183 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 15:43:10,185 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 15:43:10,189 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 15:43:27,724 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 15:43:27,725 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:43:27,742 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:43:27,743 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 6
2019-07-22 15:43:27,749 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 1
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  }, {
    "messageId" : 17,
    "title" : "hello",
    "content" : "我肥来了",
    "writer" : "jry",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-22 15:43:40,744 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 15:43:40,749 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: (String), (String)
2019-07-22 15:43:40,757 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 15:53:19,210 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 15:53:19,211 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:53:19,216 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:53:19,217 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 6
2019-07-22 15:53:19,218 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 1
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  }, {
    "messageId" : 17,
    "title" : "hello",
    "content" : "我肥来了",
    "writer" : "jry",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-22 15:57:47,913 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 15:57:47,914 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 15:57:47,924 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 15:57:47,925 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 6
2019-07-22 15:57:47,928 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 1
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  }, {
    "messageId" : 17,
    "title" : "hello",
    "content" : "我肥来了",
    "writer" : "jry",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-22 16:04:56,301 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 16:04:56,304 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 16:04:56,307 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 16:07:34,604 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9052 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 16:07:34,605 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 16:07:34,605 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 16:07:38,885 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 4.377 seconds (JVM running for 2009.247)
2019-07-22 16:25:18,819 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9052 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 16:25:18,820 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 16:25:18,820 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 16:25:20,567 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.794 seconds (JVM running for 3070.929)
2019-07-22 16:25:28,001 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 16:25:28,005 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 16:25:28,007 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 16:25:32,908 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 16:25:32,911 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 16:25:32,913 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 17:14:23,220 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9052 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 17:14:23,221 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 17:14:23,222 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 17:14:24,560 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.385 seconds (JVM running for 6014.922)
2019-07-22 17:28:43,109 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9052 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 17:28:43,109 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 17:28:43,110 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 17:28:44,519 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.462 seconds (JVM running for 6874.88)
2019-07-22 18:33:35,090 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 3740 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 18:33:35,106 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 18:33:35,106 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 18:33:40,047 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 5.861 seconds (JVM running for 7.65)
2019-07-22 18:33:44,825 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 18:33:44,865 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 18:33:44,913 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 18:33:44,917 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 6
2019-07-22 18:33:44,973 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 1
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  }, {
    "messageId" : 17,
    "title" : "hello",
    "content" : "我肥来了",
    "writer" : "jry",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-22 18:34:30,337 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 18:34:30,337 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 18:34:30,341 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 18:34:30,341 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 18:34:30,345 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 18:34:30,345 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-22 18:34:30,345 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }
}
2019-07-22 18:34:30,345 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writeDate" : 1565193600000
  }, {
    "revertId" : 3,
    "messageId" : 1,
    "content" : "我觉得应该是小米的，才200多块钱",
    "writer" : "ruok",
    "writeDate" : 1566576000000
  }, {
    "revertId" : 4,
    "messageId" : 1,
    "content" : "现在mp4都挺便宜的了，大家都用手机看，楼主随便买都行",
    "writer" : "路人",
    "writeDate" : 1567267200000
  } ]
}
2019-07-22 18:35:48,073 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 18:35:48,073 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 18:35:48,077 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 6
2019-07-22 18:35:48,081 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 6
2019-07-22 18:35:48,081 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 1
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  }, {
    "messageId" : 17,
    "title" : "hello",
    "content" : "我肥来了",
    "writer" : "jry",
    "writeDate" : 1563811200000,
    "count" : 0
  } ]
}
2019-07-22 18:37:33,421 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO message VALUE(0,? ,? ,? ,? ,0) 
2019-07-22 18:37:33,429 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: try(String), 哈哈哈哈哈哈哈哈哈(String), okk(String), 2019-07-24 00:00:00.0(Timestamp)
2019-07-22 18:37:33,429 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 18:38:57,710 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 18:38:57,710 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 18:38:57,722 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-22 18:38:57,722 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 7
2019-07-22 18:38:57,726 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 1
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  }, {
    "messageId" : 17,
    "title" : "hello",
    "content" : "我肥来了",
    "writer" : "jry",
    "writeDate" : 1563811200000,
    "count" : 0
  }, {
    "messageId" : 18,
    "title" : "try",
    "content" : "哈哈哈哈哈哈哈哈哈",
    "writer" : "okk",
    "writeDate" : 1563897600000,
    "count" : 0
  } ]
}
2019-07-22 18:39:38,622 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-22 18:39:38,626 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 18:39:38,626 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 18:39:38,630 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 18:39:38,634 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }
}
2019-07-22 18:39:38,626 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 18:39:38,638 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 3
2019-07-22 18:39:38,642 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writeDate" : 1565193600000
  }, {
    "revertId" : 3,
    "messageId" : 1,
    "content" : "我觉得应该是小米的，才200多块钱",
    "writer" : "ruok",
    "writeDate" : 1566576000000
  }, {
    "revertId" : 4,
    "messageId" : 1,
    "content" : "现在mp4都挺便宜的了，大家都用手机看，楼主随便买都行",
    "writer" : "路人",
    "writeDate" : 1567267200000
  } ]
}
2019-07-22 18:40:00,367 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO revert VALUE(0,? ,? ,? ,?) 
2019-07-22 18:40:00,371 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer), 楼上+1(String), bobo(String), 2019-07-25 00:00:00.0(Timestamp)
2019-07-22 18:40:00,371 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 18:40:00,371 DEBUG (RevertController.java:30)- Json==>{
  "msg" : "回复成功！",
  "code" : 0,
  "data" : "null"
}
2019-07-22 18:40:01,507 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-22 18:40:01,515 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-22 18:40:01,515 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-22 18:40:01,519 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 19,
    "messageId" : 1,
    "content" : "楼上+1",
    "writer" : "bobo",
    "writeDate" : 1563984000000
  }, {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writeDate" : 1565193600000
  }, {
    "revertId" : 3,
    "messageId" : 1,
    "content" : "我觉得应该是小米的，才200多块钱",
    "writer" : "ruok",
    "writeDate" : 1566576000000
  }, {
    "revertId" : 4,
    "messageId" : 1,
    "content" : "现在mp4都挺便宜的了，大家都用手机看，楼主随便买都行",
    "writer" : "路人",
    "writeDate" : 1567267200000
  } ]
}
2019-07-22 18:41:29,960 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-22 18:41:29,964 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-22 18:41:29,968 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-22 18:41:29,968 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 7
2019-07-22 18:41:29,968 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 3
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 1
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  }, {
    "messageId" : 17,
    "title" : "hello",
    "content" : "我肥来了",
    "writer" : "jry",
    "writeDate" : 1563811200000,
    "count" : 0
  }, {
    "messageId" : 18,
    "title" : "try",
    "content" : "哈哈哈哈哈哈哈哈哈",
    "writer" : "okk",
    "writeDate" : 1563897600000,
    "count" : 0
  } ]
}
2019-07-22 18:43:01,063 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 18:43:01,067 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 18:43:01,071 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 18:43:02,771 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 18:43:02,771 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: (String), (String)
2019-07-22 18:43:02,775 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 18:43:07,957 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 18:43:07,957 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 18:43:07,961 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:41:59,739 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 8404 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 22:41:59,754 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 22:41:59,756 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 22:42:03,928 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 5.051 seconds (JVM running for 6.801)
2019-07-22 22:46:29,059 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? AND status = 1; 
2019-07-22 22:46:29,088 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), 11(String)
2019-07-22 22:46:29,121 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 22:46:34,255 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? AND status = 1; 
2019-07-22 22:46:34,255 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 22:46:34,260 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:47:49,134 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? AND status = 1; 
2019-07-22 22:47:49,135 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: jry(String), jry(String)
2019-07-22 22:47:49,137 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 22:48:04,512 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? AND status = 1; 
2019-07-22 22:48:04,513 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: zzg(String), zzg(String)
2019-07-22 22:48:04,515 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 22:52:24,046 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO users VALUE(0,? ,? ,0); 
2019-07-22 22:52:24,049 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: null, 11(String)
2019-07-22 22:52:24,187 ERROR (BaseController.java:271)- 操作数据库出现异常:名称重复，外键关联
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'userName' cannot be null
### The error may exist in com/zryx/company/mapper/UsersMapper.xml
### The error may involve com.zryx.company.mapper.UsersMapper.userRegister-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO users VALUE(0,? ,? ,0);
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'userName' cannot be null
; Column 'userName' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'userName' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy65.userRegister(Unknown Source)
	at com.zryx.company.service.imp.UsersServiceImpl.userRegister(UsersServiceImpl.java:33)
	at com.zryx.company.controller.UsersController.userRegister(UsersController.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'userName' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy78.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-22 22:52:37,773 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 22:52:37,774 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-22 22:52:37,776 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 22:54:00,886 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 22:54:00,887 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-22 22:54:00,889 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 22:54:07,656 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO users VALUE(0,? ,? ,0); 
2019-07-22 22:54:07,658 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-22 22:54:07,662 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-22 22:54:13,349 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 22:54:13,352 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-22 22:54:13,356 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:54:34,652 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 22:54:34,655 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 22:54:34,658 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:57:17,794 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 22:57:17,795 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-22 22:57:17,797 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:57:26,527 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 22:57:26,529 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-22 22:57:26,530 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:59:27,894 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 22:59:27,896 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-22 22:59:27,898 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 22:59:38,265 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 22:59:38,266 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), 11(String)
2019-07-22 22:59:38,267 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 22:59:44,872 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 22:59:44,873 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 22:59:44,876 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:00:03,775 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9488 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 23:00:03,775 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 23:00:03,775 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 23:00:07,212 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 4.14 seconds (JVM running for 5.487)
2019-07-22 23:00:56,064 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9488 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 23:00:56,065 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 23:00:56,065 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 23:00:57,642 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.641 seconds (JVM running for 55.916)
2019-07-22 23:02:45,842 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9488 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 23:02:45,842 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 23:02:45,842 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 23:02:46,824 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.091 seconds (JVM running for 165.103)
2019-07-22 23:03:26,121 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:03:26,156 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 23:03:26,187 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:03:30,653 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:03:30,654 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 23:03:30,656 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:04:07,256 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:04:07,257 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-22 23:04:07,259 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:04:22,581 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:04:22,583 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: jry(String), jry(String)
2019-07-22 23:04:22,588 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-22 23:04:40,987 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:04:40,991 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-22 23:04:40,994 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:04:46,127 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:04:46,129 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-22 23:04:46,131 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:10:03,280 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:10:03,282 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 23:10:03,284 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:10:24,971 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:10:24,971 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-22 23:10:24,971 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:13:42,790 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9488 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 23:13:42,790 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 23:13:42,791 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 23:13:43,815 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.065 seconds (JVM running for 822.098)
2019-07-22 23:13:43,999 DEBUG (IndexController.java:95)- Json-->{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-22 23:13:44,008 ERROR (BaseController.java:285)- 系统异常:null
java.lang.NullPointerException: null
	at com.zryx.company.controller.IndexController.logoutServlet(IndexController.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-22 23:13:51,208 DEBUG (IndexController.java:95)- Json-->{
  "msg" : "查无信息",
  "code" : -1
}
2019-07-22 23:13:51,209 ERROR (BaseController.java:285)- 系统异常:null
java.lang.NullPointerException: null
	at com.zryx.company.controller.IndexController.logoutServlet(IndexController.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-22 23:13:59,464 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:13:59,466 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 23:13:59,473 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:14:01,094 DEBUG (IndexController.java:95)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 0,
    "userName" : "admin",
    "password" : "admin",
    "status" : 0
  } ]
}
2019-07-22 23:14:01,095 DEBUG (IndexController.java:97)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 0,
    "userName" : "admin",
    "password" : "admin",
    "status" : 0
  } ]
}
2019-07-22 23:14:38,524 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:14:38,525 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-22 23:14:38,527 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:14:47,565 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:14:47,566 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 23:14:47,568 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:15:04,176 DEBUG (IndexController.java:95)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 0,
    "userName" : "admin",
    "password" : "admin",
    "status" : 0
  }, {
    "userId" : 0,
    "userName" : "hello",
    "password" : "hello",
    "status" : 0
  }, {
    "userId" : 0,
    "userName" : "admin",
    "password" : "admin",
    "status" : 0
  } ]
}
2019-07-22 23:15:04,177 DEBUG (IndexController.java:97)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 0,
    "userName" : "admin",
    "password" : "admin",
    "status" : 0
  }, {
    "userId" : 0,
    "userName" : "hello",
    "password" : "hello",
    "status" : 0
  }, {
    "userId" : 0,
    "userName" : "admin",
    "password" : "admin",
    "status" : 0
  } ]
}
2019-07-22 23:15:38,486 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9488 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 23:15:38,486 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 23:15:38,486 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 23:15:39,773 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.319 seconds (JVM running for 938.046)
2019-07-22 23:15:50,772 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9488 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 23:15:50,772 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 23:15:50,772 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 23:15:51,841 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.1 seconds (JVM running for 950.118)
2019-07-22 23:15:57,834 ERROR (BaseController.java:285)- 系统异常:null
java.lang.NullPointerException: null
	at com.zryx.company.controller.IndexController.logoutServlet(IndexController.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-22 23:16:06,095 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:16:06,098 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 23:16:06,101 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:16:16,278 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:16:16,279 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-22 23:16:16,281 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:16:18,769 DEBUG (IndexController.java:97)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 0,
    "userName" : "admin",
    "password" : "admin",
    "status" : 0
  }, {
    "userId" : 0,
    "userName" : "hello",
    "password" : "hello",
    "status" : 0
  } ]
}
2019-07-22 23:22:03,639 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9488 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 23:22:03,639 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 23:22:03,639 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 23:22:04,680 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.072 seconds (JVM running for 1322.968)
2019-07-22 23:22:17,205 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:22:17,207 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 23:22:17,208 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:22:29,075 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:22:29,076 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-22 23:22:29,079 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:22:31,672 DEBUG (IndexController.java:108)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 0,
    "userName" : "admin",
    "password" : "admin",
    "status" : 0
  }, {
    "userId" : 0,
    "userName" : "hello",
    "password" : "hello",
    "status" : 0
  } ]
}
2019-07-22 23:23:40,840 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9488 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 23:23:40,840 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 23:23:40,841 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 23:23:42,096 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.297 seconds (JVM running for 1420.369)
2019-07-22 23:23:42,172 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:23:42,174 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 23:23:42,177 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:23:51,049 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:23:51,049 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-22 23:23:51,049 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:23:52,827 DEBUG (IndexController.java:108)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 7,
    "userName" : "hello",
    "password" : "hello",
    "status" : 0
  }
}
2019-07-22 23:25:21,555 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9488 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 23:25:21,555 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 23:25:21,556 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 23:25:22,949 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.439 seconds (JVM running for 1521.222)
2019-07-22 23:25:31,159 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:25:31,170 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-22 23:25:31,172 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:25:31,183 ERROR (BaseController.java:285)- 系统异常:java.io.IOException: 远程主机强迫关闭了一个现有的连接。
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:299)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:262)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:297)
	at sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:141)
	at java.io.OutputStreamWriter.flush(OutputStreamWriter.java:229)
	at org.springframework.util.StreamUtils.copy(StreamUtils.java:124)
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:110)
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:44)
	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:227)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:293)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:180)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:122)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:140)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:152)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1261)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:793)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:746)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:736)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:564)
	at org.apache.coyote.http11.filters.IdentityOutputFilter.flush(IdentityOutputFilter.java:117)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:217)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1150)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:394)
	at org.apache.coyote.Response.action(Response.java:209)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:295)
	... 60 common frames omitted
2019-07-22 23:25:42,225 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:25:42,226 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-22 23:25:42,228 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:25:44,862 DEBUG (IndexController.java:109)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 7,
    "userName" : "hello",
    "password" : "hello",
    "status" : 0
  }
}
2019-07-22 23:25:53,051 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:25:53,054 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 23:25:53,057 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:26:04,133 DEBUG (IndexController.java:109)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }
}
2019-07-22 23:26:17,485 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:26:17,485 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: zzg(String), zzg(String)
2019-07-22 23:26:17,485 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:26:24,806 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:26:24,809 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-22 23:26:24,811 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:26:31,837 DEBUG (IndexController.java:109)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 2,
    "userName" : "zzg",
    "password" : "zzg",
    "status" : 0
  }
}
2019-07-22 23:26:51,743 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:26:51,744 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 23:26:51,746 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:26:56,215 DEBUG (IndexController.java:109)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 9,
    "userName" : "ohou",
    "password" : "11",
    "status" : 0
  }
}
2019-07-22 23:29:16,240 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9488 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 23:29:16,241 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 23:29:16,241 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 23:29:17,285 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.083 seconds (JVM running for 1755.564)
2019-07-22 23:33:52,866 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9488 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 23:33:52,866 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 23:33:52,867 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 23:33:53,948 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.126 seconds (JVM running for 2032.229)
2019-07-22 23:33:56,728 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:33:56,736 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 23:33:56,738 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:35:11,343 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:35:11,345 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-22 23:35:11,347 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:35:13,972 DEBUG (IndexController.java:101)- JsonUser-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 7,
    "userName" : "hello",
    "password" : "hello",
    "status" : 0
  }
}
2019-07-22 23:35:13,972 DEBUG (IndexController.java:102)- JsonUserList-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 0,
    "userName" : "admin",
    "password" : "admin",
    "status" : 0
  }, {
    "userId" : 0,
    "userName" : "hello",
    "password" : "hello",
    "status" : 0
  } ]
}
2019-07-22 23:36:47,828 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9488 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 23:36:47,828 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 23:36:47,828 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 23:36:49,089 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.308 seconds (JVM running for 2207.363)
2019-07-22 23:36:49,262 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:36:49,263 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 23:36:49,264 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:36:59,243 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:36:59,245 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-22 23:36:59,248 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:37:02,482 DEBUG (IndexController.java:102)- JsonUserList-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "userId" : 0,
    "userName" : "admin",
    "password" : "admin",
    "status" : 0
  }, {
    "userId" : 0,
    "userName" : "hello",
    "password" : "hello",
    "status" : 0
  } ]
}
2019-07-22 23:37:02,483 DEBUG (IndexController.java:106)- JsonUser-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 1,
    "userName" : "admin",
    "password" : "admin",
    "status" : 1
  }
}
2019-07-22 23:37:40,491 ERROR (BaseController.java:285)- 系统异常:Index: 0, Size: 0
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:657)
	at java.util.ArrayList.remove(ArrayList.java:496)
	at com.zryx.company.controller.IndexController.logoutServlet(IndexController.java:98)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-07-22 23:45:41,114 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9488 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 23:45:41,114 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 23:45:41,115 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 23:45:42,212 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.143 seconds (JVM running for 2740.491)
2019-07-22 23:48:56,614 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9488 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 23:48:56,614 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 23:48:56,614 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 23:48:57,631 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.048 seconds (JVM running for 2935.905)
2019-07-22 23:53:04,992 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9488 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 23:53:04,992 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 23:53:04,992 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 23:53:05,963 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.007 seconds (JVM running for 3184.236)
2019-07-22 23:53:17,224 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:53:17,228 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 23:53:17,229 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:53:25,256 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:53:25,257 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-22 23:53:25,258 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:53:27,870 DEBUG (IndexController.java:107)- JsonUser-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "userId" : 7,
    "userName" : "hello",
    "password" : "hello",
    "status" : 0
  }
}
2019-07-22 23:54:33,950 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9488 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 23:54:33,951 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 23:54:33,951 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 23:54:35,286 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.387 seconds (JVM running for 3273.559)
2019-07-22 23:54:42,641 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:54:42,646 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-22 23:54:42,649 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:54:42,667 ERROR (BaseController.java:285)- 系统异常:java.io.IOException: 远程主机强迫关闭了一个现有的连接。
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:299)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:262)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:297)
	at sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:141)
	at java.io.OutputStreamWriter.flush(OutputStreamWriter.java:229)
	at org.springframework.util.StreamUtils.copy(StreamUtils.java:124)
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:110)
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:44)
	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:227)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:293)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:180)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:122)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:140)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:152)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1261)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:793)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:746)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:736)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:564)
	at org.apache.coyote.http11.filters.IdentityOutputFilter.flush(IdentityOutputFilter.java:117)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:217)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1150)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:394)
	at org.apache.coyote.Response.action(Response.java:209)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:295)
	... 60 common frames omitted
2019-07-22 23:54:48,936 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:54:48,942 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 23:54:48,944 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:54:51,096 DEBUG (IndexController.java:103)- 删除失败
2019-07-22 23:55:03,103 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:55:03,104 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-22 23:55:03,106 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:55:54,364 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9488 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 23:55:54,364 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 23:55:54,365 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 23:55:55,486 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.165 seconds (JVM running for 3353.767)
2019-07-22 23:57:40,206 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9488 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-22 23:57:40,207 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-22 23:57:40,207 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-22 23:57:41,197 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.037 seconds (JVM running for 3459.471)
2019-07-22 23:57:44,150 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:57:44,153 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 23:57:44,155 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:57:50,494 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-22 23:57:50,495 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-22 23:57:50,497 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-22 23:57:53,989 DEBUG (IndexController.java:103)- 删除失败
2019-07-23 00:00:31,359 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9488 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 00:00:31,359 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 00:00:31,360 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 00:07:11,421 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9488 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 00:07:11,421 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 00:07:11,421 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 00:07:12,521 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.139 seconds (JVM running for 4030.796)
2019-07-23 00:08:37,782 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 00:08:37,787 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 00:08:37,789 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 00:08:39,108 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 00:08:39,109 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: (String), (String)
2019-07-23 00:08:39,111 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-23 00:08:44,089 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 00:08:44,091 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 00:08:44,093 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 00:08:57,302 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 00:08:57,302 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-23 00:08:57,303 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 00:09:00,577 DEBUG (IndexController.java:103)- 删除失败
2019-07-23 00:11:13,689 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9488 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 00:11:13,690 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 00:11:13,690 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 00:13:05,014 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9488 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 00:13:05,014 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 00:13:05,015 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 00:13:07,053 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 2.106 seconds (JVM running for 4385.324)
2019-07-23 00:15:43,843 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 228 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 00:15:43,858 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 00:15:43,858 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 00:15:49,439 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 6.254 seconds (JVM running for 7.646)
2019-07-23 00:16:16,094 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 00:16:16,126 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 00:16:16,155 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 00:16:30,310 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 00:16:30,312 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 00:16:30,316 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 00:16:32,566 DEBUG (IndexController.java:103)- 删除失败
2019-07-23 00:16:39,257 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 00:16:39,258 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-23 00:16:39,261 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 00:17:48,565 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 00:17:48,567 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 00:17:48,569 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 00:18:21,148 DEBUG (IndexController.java:103)- 删除失败
2019-07-23 00:20:09,589 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 228 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 00:20:09,589 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 00:20:09,590 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 00:20:11,197 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.663 seconds (JVM running for 269.388)
2019-07-23 00:22:25,289 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 228 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 00:22:25,290 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 00:22:25,290 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 00:22:26,795 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.545 seconds (JVM running for 404.987)
2019-07-23 00:22:33,363 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 228 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 00:22:33,364 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 00:22:33,365 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 00:22:34,566 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.242 seconds (JVM running for 412.757)
2019-07-23 00:23:02,071 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 228 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 00:23:02,071 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 00:23:02,072 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 00:23:03,102 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.071 seconds (JVM running for 441.293)
2019-07-23 00:23:36,042 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 228 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 00:23:36,042 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 00:23:36,043 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 00:28:09,511 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 228 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 00:28:09,512 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 00:28:09,512 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 00:28:10,830 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.359 seconds (JVM running for 749.022)
2019-07-23 00:28:14,938 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 00:28:14,946 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 00:28:14,950 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 00:28:30,411 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 00:28:30,412 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-23 00:28:30,414 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 00:28:37,946 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 00:28:37,948 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-23 00:28:37,956 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 00:28:45,415 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 00:28:45,424 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-23 00:28:45,432 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 00:28:52,498 DEBUG (IndexController.java:103)- 删除失败
2019-07-23 00:29:01,693 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 00:29:01,695 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 00:29:01,697 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 00:29:57,059 DEBUG (IndexController.java:103)- 删除失败
2019-07-23 00:30:24,596 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 228 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 00:30:24,597 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 00:30:24,597 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 00:37:45,128 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 228 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 00:37:45,129 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 00:37:45,129 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 00:37:46,221 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.193 seconds (JVM running for 1324.413)
2019-07-23 00:37:54,625 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 00:37:54,629 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 00:37:54,633 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 00:37:54,651 ERROR (BaseController.java:285)- 系统异常:java.io.IOException: 远程主机强迫关闭了一个现有的连接。
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:299)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:262)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:297)
	at sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:141)
	at java.io.OutputStreamWriter.flush(OutputStreamWriter.java:229)
	at org.springframework.util.StreamUtils.copy(StreamUtils.java:124)
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:110)
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:44)
	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:227)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:293)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:180)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:122)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:140)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:152)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1261)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:793)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:746)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:736)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:564)
	at org.apache.coyote.http11.filters.IdentityOutputFilter.flush(IdentityOutputFilter.java:117)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:217)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1150)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:394)
	at org.apache.coyote.Response.action(Response.java:209)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:295)
	... 60 common frames omitted
2019-07-23 00:38:12,199 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 00:38:12,201 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), ohou(String)
2019-07-23 00:38:12,207 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-23 00:38:20,717 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 00:38:20,718 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-23 00:38:20,720 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 00:38:33,788 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 00:38:33,789 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-23 00:38:33,791 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 00:38:35,968 DEBUG (IndexController.java:103)- 删除失败
2019-07-23 00:40:50,620 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 228 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 00:40:50,621 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 00:40:50,622 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 00:40:51,666 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.084 seconds (JVM running for 1509.857)
2019-07-23 00:41:02,415 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 00:41:02,421 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-23 00:41:02,423 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 00:41:02,427 ERROR (BaseController.java:285)- 系统异常:java.io.IOException: 远程主机强迫关闭了一个现有的连接。
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:299)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:262)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:297)
	at sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:141)
	at java.io.OutputStreamWriter.flush(OutputStreamWriter.java:229)
	at org.springframework.util.StreamUtils.copy(StreamUtils.java:124)
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:110)
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:44)
	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:227)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:293)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:180)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:122)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:140)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:152)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1261)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:793)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:746)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:736)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:564)
	at org.apache.coyote.http11.filters.IdentityOutputFilter.flush(IdentityOutputFilter.java:117)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:217)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1150)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:394)
	at org.apache.coyote.Response.action(Response.java:209)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:295)
	... 60 common frames omitted
2019-07-23 00:41:10,802 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 00:41:10,803 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-23 00:41:10,805 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 00:41:12,942 DEBUG (IndexController.java:103)- 删除失败
2019-07-23 00:41:12,943 DEBUG (IndexController.java:105)- JsonUser-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : 9
}
2019-07-23 00:42:17,029 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 228 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 00:42:17,030 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 00:42:17,030 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 00:42:18,137 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.141 seconds (JVM running for 1596.328)
2019-07-23 00:42:28,468 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 00:42:28,471 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-23 00:42:28,475 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 00:42:28,495 ERROR (BaseController.java:285)- 系统异常:java.io.IOException: 远程主机强迫关闭了一个现有的连接。
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:299)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:262)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:297)
	at sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:141)
	at java.io.OutputStreamWriter.flush(OutputStreamWriter.java:229)
	at org.springframework.util.StreamUtils.copy(StreamUtils.java:124)
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:110)
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:44)
	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:227)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:293)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:180)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:122)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:140)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:152)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1261)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:793)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:746)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:736)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:564)
	at org.apache.coyote.http11.filters.IdentityOutputFilter.flush(IdentityOutputFilter.java:117)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:217)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1150)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:394)
	at org.apache.coyote.Response.action(Response.java:209)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:295)
	... 60 common frames omitted
2019-07-23 00:42:36,501 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 00:42:36,503 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-23 00:42:36,506 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 00:42:38,584 DEBUG (IndexController.java:103)- 删除失败
2019-07-23 00:42:38,584 DEBUG (IndexController.java:105)- JsonUser-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : "ohou"
}
2019-07-23 09:14:42,909 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 6828 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 09:14:42,916 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 09:14:42,917 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 09:14:49,693 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 8.508 seconds (JVM running for 11.023)
2019-07-23 09:16:56,435 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 09:16:56,486 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 09:16:56,536 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 09:17:01,590 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 09:17:01,593 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 09:17:01,596 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 09:17:14,790 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 09:17:14,791 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-23 09:17:14,795 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 09:17:18,750 DEBUG (IndexController.java:103)- 删除失败
2019-07-23 09:17:18,755 DEBUG (IndexController.java:105)- JsonUser-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : "admin"
}
2019-07-23 09:20:17,316 DEBUG (IndexController.java:103)- 删除失败
2019-07-23 09:20:17,316 DEBUG (IndexController.java:105)- JsonUser-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : "hello"
}
2019-07-23 09:22:02,010 DEBUG (IndexController.java:103)- 删除失败
2019-07-23 09:22:02,011 DEBUG (IndexController.java:105)- JsonUser-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : "admin"
}
2019-07-23 09:23:11,932 DEBUG (IndexController.java:103)- 删除失败
2019-07-23 09:23:11,933 DEBUG (IndexController.java:105)- JsonUser-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : "admin"
}
2019-07-23 09:39:55,640 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 6828 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 09:39:55,643 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 09:39:55,644 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 09:39:57,432 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.885 seconds (JVM running for 1518.764)
2019-07-23 09:40:08,217 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 09:40:08,221 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 09:40:08,224 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 09:41:05,146 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 09:41:05,146 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-23 09:41:05,146 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 09:47:20,620 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 6828 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 09:47:20,621 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 09:47:20,621 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 09:47:22,485 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.924 seconds (JVM running for 1963.816)
2019-07-23 09:47:30,757 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 09:47:30,765 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-23 09:47:30,768 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 09:47:35,655 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 09:47:35,656 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 09:47:35,658 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 09:47:49,423 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 09:47:49,425 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-23 09:47:49,430 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 09:47:58,967 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 09:47:58,971 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-23 09:47:58,975 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 09:48:16,351 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 09:48:16,361 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 09:48:16,368 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 09:52:20,284 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 6828 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 09:52:20,284 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 09:52:20,284 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 09:52:21,651 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.41 seconds (JVM running for 2262.994)
2019-07-23 09:52:29,306 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 09:52:29,322 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 09:52:29,324 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 09:52:29,345 ERROR (BaseController.java:285)- 系统异常:java.io.IOException: 远程主机强迫关闭了一个现有的连接。
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:299)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:262)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:297)
	at sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:141)
	at java.io.OutputStreamWriter.flush(OutputStreamWriter.java:229)
	at org.springframework.util.StreamUtils.copy(StreamUtils.java:124)
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:110)
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:44)
	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:227)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:293)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:180)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:122)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:140)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:152)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1261)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:793)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:746)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:736)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:564)
	at org.apache.coyote.http11.filters.IdentityOutputFilter.flush(IdentityOutputFilter.java:117)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:217)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1150)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:394)
	at org.apache.coyote.Response.action(Response.java:209)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:295)
	... 60 common frames omitted
2019-07-23 09:52:46,108 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 09:52:46,109 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-23 09:52:46,111 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 09:53:01,376 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 09:53:01,379 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 09:53:01,382 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 09:53:56,701 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 6828 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 09:53:56,701 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 09:53:56,701 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 09:53:57,925 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.271 seconds (JVM running for 2359.264)
2019-07-23 10:02:53,139 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 6828 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 10:02:53,139 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 10:02:53,140 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 10:02:54,898 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.266 seconds (JVM running for 2896.229)
2019-07-23 10:03:23,018 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 6828 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 10:03:23,019 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 10:03:23,020 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 10:03:25,408 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 2.436 seconds (JVM running for 2926.74)
2019-07-23 10:03:49,833 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 10:03:49,858 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 10:03:49,861 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 10:03:58,943 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 10:03:58,944 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-23 10:03:58,946 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 10:04:12,076 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 10:04:12,080 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 10:04:12,082 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 10:16:47,742 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 6828 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 10:16:47,743 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 10:16:47,743 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 10:16:49,072 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.453 seconds (JVM running for 3730.406)
2019-07-23 10:20:13,593 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 6828 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 10:20:13,593 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 10:20:13,593 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 10:20:15,224 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.678 seconds (JVM running for 3936.555)
2019-07-23 10:22:31,152 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 6828 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 10:22:31,152 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 10:22:31,152 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 10:22:32,344 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.227 seconds (JVM running for 4073.676)
2019-07-23 11:22:07,531 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 6828 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 11:22:07,531 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 11:22:07,532 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 11:22:08,570 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.114 seconds (JVM running for 7649.902)
2019-07-23 11:22:25,516 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 11:22:25,523 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 11:22:25,527 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 11:22:34,956 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 11:22:34,959 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-23 11:22:34,960 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 11:22:43,243 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 11:22:43,244 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-23 11:22:43,246 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 11:23:14,251 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 11:23:14,253 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 11:23:14,255 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 11:23:37,196 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 11:23:37,197 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 11:23:37,198 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 11:24:24,941 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 6828 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 11:24:24,941 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 11:24:24,942 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 11:24:27,106 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 2.231 seconds (JVM running for 7788.436)
2019-07-23 11:24:37,316 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 11:24:37,335 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-23 11:24:37,337 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 11:24:42,248 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 11:24:42,249 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-23 11:24:42,250 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 11:26:29,229 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 11:26:29,233 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 11:26:29,235 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 11:28:16,069 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 11:28:16,072 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-23 11:28:16,076 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 11:28:26,240 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 11:28:26,241 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 11:28:26,243 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 11:28:45,706 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 8496 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 11:28:45,773 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 11:28:45,776 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 11:28:51,261 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 6.49 seconds (JVM running for 8.568)
2019-07-23 11:46:49,327 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 6372 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 11:46:49,335 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 11:46:49,337 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 11:46:53,833 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 5.443 seconds (JVM running for 7.533)
2019-07-23 11:47:07,140 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 11:47:07,178 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 11:47:07,216 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 11:50:28,508 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 11:50:28,511 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-23 11:50:28,514 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 11:51:57,710 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 11:51:57,711 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 11:51:57,713 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 11:52:15,498 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 13468 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 11:52:15,502 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 11:52:15,504 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 11:52:21,694 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 7.317 seconds (JVM running for 9.326)
2019-07-23 11:52:51,927 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 11:52:51,963 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-23 11:52:51,999 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 11:52:52,016 ERROR (BaseController.java:285)- 系统异常:java.io.IOException: 远程主机强迫关闭了一个现有的连接。
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:299)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:262)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:297)
	at sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:141)
	at java.io.OutputStreamWriter.flush(OutputStreamWriter.java:229)
	at org.springframework.util.StreamUtils.copy(StreamUtils.java:124)
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:110)
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:44)
	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:227)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:293)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:180)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:122)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:140)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:152)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1261)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:793)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:746)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:736)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:564)
	at org.apache.coyote.http11.filters.IdentityOutputFilter.flush(IdentityOutputFilter.java:117)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:217)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1150)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:394)
	at org.apache.coyote.Response.action(Response.java:209)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:295)
	... 60 common frames omitted
2019-07-23 11:53:53,831 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 11:53:53,832 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 11:53:53,835 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 11:54:07,803 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 11:54:07,807 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-23 11:54:07,810 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 11:54:54,343 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 14636 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 11:54:54,350 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 11:54:54,352 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 11:55:02,196 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 8.962 seconds (JVM running for 12.354)
2019-07-23 11:56:25,343 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 13692 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 11:56:25,366 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 11:56:25,366 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 11:56:29,884 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 5.716 seconds (JVM running for 7.901)
2019-07-23 11:56:57,741 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 13432 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 11:56:57,746 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 11:56:57,747 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 11:57:03,226 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 6.484 seconds (JVM running for 8.313)
2019-07-23 12:39:58,691 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 1980 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 12:39:58,701 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 12:39:58,701 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 12:40:03,662 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 6.088 seconds (JVM running for 8.588)
2019-07-23 12:49:23,521 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 12:49:23,565 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 12:49:23,608 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 12:51:18,145 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 12:51:18,147 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: (String), (String)
2019-07-23 12:51:18,150 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-23 12:51:27,867 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 12:51:27,871 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 12:51:27,873 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 12:55:52,303 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 7980 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 12:55:52,305 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 12:55:52,305 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 12:55:57,125 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 5.444 seconds (JVM running for 6.917)
2019-07-23 12:56:26,600 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 12:56:26,638 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 12:56:26,675 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 12:56:32,107 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 12:56:32,108 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: (String), (String)
2019-07-23 12:56:32,110 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-23 13:30:20,354 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 13:30:20,356 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 13:30:20,371 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 13:31:29,427 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 13:31:29,432 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 13:31:29,434 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 13:32:51,327 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO users VALUE(0,? ,? ,0); 
2019-07-23 13:32:51,329 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: (String), (String)
2019-07-23 13:32:51,529 ERROR (BaseController.java:285)- 系统异常:
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may exist in com/zryx/company/mapper/UsersMapper.xml
### The error may involve com.zryx.company.mapper.UsersMapper.userRegister-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO users VALUE(0,? ,? ,0);
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may exist in com/zryx/company/mapper/UsersMapper.xml
### The error may involve com.zryx.company.mapper.UsersMapper.userRegister-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO users VALUE(0,? ,? ,0);
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy65.userRegister(Unknown Source)
	at com.zryx.company.service.imp.UsersServiceImpl.userRegister(UsersServiceImpl.java:36)
	at com.zryx.company.controller.UsersController.userRegister(UsersController.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy78.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-23 13:34:06,076 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 13:34:06,077 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: (String), (String)
2019-07-23 13:34:06,079 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-23 13:34:09,450 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO users VALUE(0,? ,? ,0); 
2019-07-23 13:34:09,451 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: (String), (String)
2019-07-23 13:34:09,454 ERROR (BaseController.java:285)- 系统异常:
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may exist in com/zryx/company/mapper/UsersMapper.xml
### The error may involve com.zryx.company.mapper.UsersMapper.userRegister-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO users VALUE(0,? ,? ,0);
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may exist in com/zryx/company/mapper/UsersMapper.xml
### The error may involve com.zryx.company.mapper.UsersMapper.userRegister-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO users VALUE(0,? ,? ,0);
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy65.userRegister(Unknown Source)
	at com.zryx.company.service.imp.UsersServiceImpl.userRegister(UsersServiceImpl.java:36)
	at com.zryx.company.controller.UsersController.userRegister(UsersController.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy78.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-23 13:34:22,562 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 13:34:22,564 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-23 13:34:22,568 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 13:34:33,071 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 13:34:33,072 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-23 13:34:33,077 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 13:34:38,798 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 13:34:38,803 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-23 13:34:38,805 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 13:35:44,084 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 13:35:44,088 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 13:35:44,092 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 13:36:17,452 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 13:36:17,456 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-23 13:36:17,465 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 13:37:42,093 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 13:37:42,096 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 13:37:42,100 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 13:39:41,464 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 13:39:41,466 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-23 13:39:41,471 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 13:39:50,130 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 13:39:50,131 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 13:39:50,133 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 13:40:09,599 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 13:40:09,606 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-23 13:40:09,613 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 13:41:10,074 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 13:41:10,076 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-23 13:41:10,078 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 13:41:20,912 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 13:41:20,913 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 13:41:20,917 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 13:41:32,852 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 13:41:32,853 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-23 13:41:32,857 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 13:41:39,734 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 13:41:39,735 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-23 13:41:39,738 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 16:21:17,922 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9356 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 16:21:17,954 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 16:21:17,954 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 16:21:21,985 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 5.016 seconds (JVM running for 7.541)
2019-07-23 16:25:45,886 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9356 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 16:25:45,886 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 16:25:45,886 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 16:25:47,959 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 2.214 seconds (JVM running for 273.506)
2019-07-23 16:26:28,468 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 16:26:28,499 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 16:26:28,530 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 16:26:28,530 ERROR (BaseController.java:285)- 系统异常:java.io.IOException: 远程主机强迫关闭了一个现有的连接。
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:299)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:262)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:297)
	at sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:141)
	at java.io.OutputStreamWriter.flush(OutputStreamWriter.java:229)
	at org.springframework.util.StreamUtils.copy(StreamUtils.java:124)
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:110)
	at org.springframework.http.converter.StringHttpMessageConverter.writeInternal(StringHttpMessageConverter.java:44)
	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:227)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:293)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:180)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:122)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:140)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:152)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1261)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:793)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:746)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:736)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:564)
	at org.apache.coyote.http11.filters.IdentityOutputFilter.flush(IdentityOutputFilter.java:117)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:217)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1150)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:394)
	at org.apache.coyote.Response.action(Response.java:209)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:295)
	... 60 common frames omitted
2019-07-23 16:26:38,817 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 16:26:38,818 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-23 16:26:38,829 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 16:26:46,036 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 16:26:46,036 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-23 16:26:46,036 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 16:26:57,879 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 16:26:57,879 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-23 16:26:57,894 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 16:27:36,876 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 2184 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 16:27:36,876 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 16:27:36,876 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 16:27:44,538 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 8.646 seconds (JVM running for 10.56)
2019-07-23 16:28:15,274 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 16:28:15,327 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 16:28:15,371 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 16:28:18,283 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 16:28:18,284 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-23 16:28:18,287 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 16:28:27,334 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 16:28:27,334 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 16:28:27,334 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 16:29:00,034 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 16:29:00,034 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-23 16:29:00,034 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 16:29:54,376 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 16:29:54,378 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: zzg(String), zzg(String)
2019-07-23 16:29:54,389 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 16:30:03,370 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 16:30:03,373 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: zzg(String), zzg(String)
2019-07-23 16:30:03,377 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 16:35:59,522 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 2360 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 16:35:59,538 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 16:35:59,538 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 16:36:03,382 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 4.594 seconds (JVM running for 6.089)
2019-07-23 16:38:42,202 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-23 16:38:42,241 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-23 16:38:42,289 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-23 16:38:42,290 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 7
2019-07-23 16:38:42,301 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 4
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 1
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  }, {
    "messageId" : 17,
    "title" : "hello",
    "content" : "我肥来了",
    "writer" : "jry",
    "writeDate" : 1563811200000,
    "count" : 0
  }, {
    "messageId" : 18,
    "title" : "try",
    "content" : "哈哈哈哈哈哈哈哈哈",
    "writer" : "okk",
    "writeDate" : 1563897600000,
    "count" : 0
  } ]
}
2019-07-23 16:38:55,189 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 16:38:55,191 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 16:38:55,205 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 16:39:01,459 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 16:39:01,460 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-23 16:39:01,462 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 16:40:09,527 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 16:40:09,529 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-23 16:40:09,531 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 16:42:22,975 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 16:42:22,976 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 16:42:22,980 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 16:42:29,692 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 16:42:29,694 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-23 16:42:29,697 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 16:42:59,300 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 12888 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 16:42:59,300 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 16:42:59,300 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 16:43:02,487 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.953 seconds (JVM running for 5.341)
2019-07-23 16:43:18,442 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 16:43:18,488 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 16:43:18,522 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 16:44:38,199 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 7116 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 16:44:38,203 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 16:44:38,204 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 16:44:42,608 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 5.256 seconds (JVM running for 6.813)
2019-07-23 16:44:54,988 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 16:44:55,027 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 16:44:55,065 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 16:45:15,750 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 16:45:15,752 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 16:45:15,755 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 16:45:48,333 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 16:45:48,333 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-23 16:45:48,333 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 16:46:38,054 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9492 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 16:46:38,054 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 16:46:38,054 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 16:46:44,008 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 6.75 seconds (JVM running for 8.198)
2019-07-23 16:46:52,549 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 16:46:52,588 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-23 16:46:52,620 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 16:47:07,512 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 16:47:07,513 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 16:47:07,515 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 16:52:56,559 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 16:52:56,561 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: ohou(String), 11(String)
2019-07-23 16:52:56,565 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 16:53:08,254 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 16:53:08,257 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 16:53:08,259 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 16:53:58,306 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 16:53:58,308 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 16:53:58,310 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 16:54:13,664 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 16:54:13,667 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-23 16:54:13,671 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 16:59:33,313 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 7048 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 16:59:33,328 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 16:59:33,328 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 16:59:36,686 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 4.107 seconds (JVM running for 5.618)
2019-07-23 17:03:34,037 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 17:03:34,071 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 17:03:34,102 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 17:03:53,997 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 17:03:54,009 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: hello(String), hello(String)
2019-07-23 17:03:54,009 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 17:04:37,465 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO users VALUE(0,? ,? ,0); 
2019-07-23 17:04:37,467 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: test(String), test(String)
2019-07-23 17:04:37,639 ERROR (BaseController.java:285)- 系统异常:
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may exist in com/zryx/company/mapper/UsersMapper.xml
### The error may involve com.zryx.company.mapper.UsersMapper.userRegister-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO users VALUE(0,? ,? ,0);
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may exist in com/zryx/company/mapper/UsersMapper.xml
### The error may involve com.zryx.company.mapper.UsersMapper.userRegister-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO users VALUE(0,? ,? ,0);
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy65.userRegister(Unknown Source)
	at com.zryx.company.service.imp.UsersServiceImpl.userRegister(UsersServiceImpl.java:36)
	at com.zryx.company.controller.UsersController.userRegister(UsersController.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-23 17:04:48,012 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 17:04:48,013 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: test(String), test(String)
2019-07-23 17:04:48,015 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 0
2019-07-23 17:06:35,942 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO users VALUE(0,? ,? ,0); 
2019-07-23 17:06:35,943 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: test(String), test(String)
2019-07-23 17:06:35,946 ERROR (BaseController.java:285)- 系统异常:
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may exist in com/zryx/company/mapper/UsersMapper.xml
### The error may involve com.zryx.company.mapper.UsersMapper.userRegister-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO users VALUE(0,? ,? ,0);
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may exist in com/zryx/company/mapper/UsersMapper.xml
### The error may involve com.zryx.company.mapper.UsersMapper.userRegister-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO users VALUE(0,? ,? ,0);
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy65.userRegister(Unknown Source)
	at com.zryx.company.service.imp.UsersServiceImpl.userRegister(UsersServiceImpl.java:36)
	at com.zryx.company.controller.UsersController.userRegister(UsersController.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-23 17:07:24,213 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO users VALUE(0,? ,? ,0); 
2019-07-23 17:07:24,215 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: test(String), test(String)
2019-07-23 17:07:24,217 ERROR (BaseController.java:285)- 系统异常:
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may exist in com/zryx/company/mapper/UsersMapper.xml
### The error may involve com.zryx.company.mapper.UsersMapper.userRegister-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO users VALUE(0,? ,? ,0);
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may exist in com/zryx/company/mapper/UsersMapper.xml
### The error may involve com.zryx.company.mapper.UsersMapper.userRegister-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO users VALUE(0,? ,? ,0);
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy65.userRegister(Unknown Source)
	at com.zryx.company.service.imp.UsersServiceImpl.userRegister(UsersServiceImpl.java:36)
	at com.zryx.company.controller.UsersController.userRegister(UsersController.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-23 17:07:35,591 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO users VALUE(0,? ,? ,0); 
2019-07-23 17:07:35,595 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 11(String), 22(String)
2019-07-23 17:07:35,599 ERROR (BaseController.java:285)- 系统异常:
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may exist in com/zryx/company/mapper/UsersMapper.xml
### The error may involve com.zryx.company.mapper.UsersMapper.userRegister-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO users VALUE(0,? ,? ,0);
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may exist in com/zryx/company/mapper/UsersMapper.xml
### The error may involve com.zryx.company.mapper.UsersMapper.userRegister-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO users VALUE(0,? ,? ,0);
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy65.userRegister(Unknown Source)
	at com.zryx.company.service.imp.UsersServiceImpl.userRegister(UsersServiceImpl.java:36)
	at com.zryx.company.controller.UsersController.userRegister(UsersController.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-23 17:07:59,497 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO users VALUE(0,? ,? ,0); 
2019-07-23 17:07:59,499 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 11(String), 22(String)
2019-07-23 17:07:59,501 ERROR (BaseController.java:285)- 系统异常:
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may exist in com/zryx/company/mapper/UsersMapper.xml
### The error may involve com.zryx.company.mapper.UsersMapper.userRegister-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO users VALUE(0,? ,? ,0);
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may exist in com/zryx/company/mapper/UsersMapper.xml
### The error may involve com.zryx.company.mapper.UsersMapper.userRegister-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO users VALUE(0,? ,? ,0);
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy65.userRegister(Unknown Source)
	at com.zryx.company.service.imp.UsersServiceImpl.userRegister(UsersServiceImpl.java:36)
	at com.zryx.company.controller.UsersController.userRegister(UsersController.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy79.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 61 common frames omitted
2019-07-23 17:10:49,984 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: INSERT INTO users VALUE(0,? ,? ,0); 
2019-07-23 17:10:49,985 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: test(String), test(String)
2019-07-23 17:10:49,987 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 1
2019-07-23 17:11:08,230 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 17:11:08,232 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: test(String), test(String)
2019-07-23 17:11:08,235 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 17:15:01,509 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM users WHERE userName = ? AND PASSWORD = ? ; 
2019-07-23 17:15:01,510 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: admin(String), admin(String)
2019-07-23 17:15:01,512 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 17:17:29,270 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 7048 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 17:17:29,270 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 17:17:29,270 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 17:17:30,748 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.525 seconds (JVM running for 1079.689)
2019-07-23 17:18:16,650 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 7048 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 17:18:16,650 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 17:18:16,650 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 17:18:17,924 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.321 seconds (JVM running for 1126.863)
2019-07-23 22:26:02,791 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9800 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 22:26:02,813 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 22:26:02,813 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 22:26:07,241 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 5.578 seconds (JVM running for 7.528)
2019-07-23 22:26:20,741 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-23 22:26:20,776 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-23 22:26:20,823 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-23 22:26:20,824 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 7
2019-07-23 22:26:20,953 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 4
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 1
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  }, {
    "messageId" : 17,
    "title" : "hello",
    "content" : "我肥来了",
    "writer" : "jry",
    "writeDate" : 1563811200000,
    "count" : 0
  }, {
    "messageId" : 18,
    "title" : "try",
    "content" : "哈哈哈哈哈哈哈哈哈",
    "writer" : "okk",
    "writeDate" : 1563897600000,
    "count" : 0
  } ]
}
2019-07-23 22:26:25,775 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM revert WHERE messageId = ? ORDER BY writeDate 
2019-07-23 22:26:25,775 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message WHERE messageId = ? ; 
2019-07-23 22:26:25,778 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-23 22:26:25,778 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 1(Integer)
2019-07-23 22:26:25,781 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 22:26:25,782 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 4
2019-07-23 22:26:25,783 DEBUG (MessageController.java:68)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 4
  }
}
2019-07-23 22:26:25,785 DEBUG (RevertController.java:22)- Json==>{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "revertId" : 19,
    "messageId" : 1,
    "content" : "楼上+1",
    "writer" : "bobo",
    "writeDate" : 1563984000000
  }, {
    "revertId" : 1,
    "messageId" : 1,
    "content" : "价格最低的MP4是爱国者牌子的，价格是1200",
    "writer" : "zzg",
    "writeDate" : 1565193600000
  }, {
    "revertId" : 3,
    "messageId" : 1,
    "content" : "我觉得应该是小米的，才200多块钱",
    "writer" : "ruok",
    "writeDate" : 1566576000000
  }, {
    "revertId" : 4,
    "messageId" : 1,
    "content" : "现在mp4都挺便宜的了，大家都用手机看，楼主随便买都行",
    "writer" : "路人",
    "writeDate" : 1567267200000
  } ]
}
2019-07-23 22:26:27,008 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message; UPDATE message SET message.`count` = (SELECT COUNT(*) FROM revert WHERE message.`messageId` = revert.`messageId`); 
2019-07-23 22:26:27,009 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-23 22:26:27,014 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 7
2019-07-23 22:26:27,015 DEBUG (BaseJdbcLogger.java:143)- <==    Updates: 7
2019-07-23 22:26:27,016 DEBUG (MessageController.java:29)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : [ {
    "messageId" : 1,
    "title" : "价格最低的MP4",
    "content" : "价格最低的MP4是什么牌子？价格是多少？",
    "writer" : "zzg",
    "writeDate" : 1563350029000,
    "count" : 4
  }, {
    "messageId" : 2,
    "title" : "品红服务宗旨",
    "content" : "品红服务宗旨是：为用户服务",
    "writer" : "bobo",
    "writeDate" : 1562900565000,
    "count" : 1
  }, {
    "messageId" : 5,
    "title" : "goodbye",
    "content" : "world",
    "writer" : "oltremare",
    "writeDate" : 1563496917000,
    "count" : 4
  }, {
    "messageId" : 12,
    "title" : "俺不知道",
    "content" : "无语 可以^-^ ",
    "writer" : "(●￣(ｴ)￣●)",
    "writeDate" : 1563331381000,
    "count" : 2
  }, {
    "messageId" : 16,
    "title" : "二维",
    "content" : "\r\n             恩恩存储   ",
    "writer" : "他他他他",
    "writeDate" : 1561943564000,
    "count" : 2
  }, {
    "messageId" : 17,
    "title" : "hello",
    "content" : "我肥来了",
    "writer" : "jry",
    "writeDate" : 1563811200000,
    "count" : 0
  }, {
    "messageId" : 18,
    "title" : "try",
    "content" : "哈哈哈哈哈哈哈哈哈",
    "writer" : "okk",
    "writeDate" : 1563897600000,
    "count" : 0
  } ]
}
2019-07-23 22:41:31,611 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9800 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 22:41:31,611 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 22:41:31,611 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 22:41:32,978 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 2.102 seconds (JVM running for 933.251)
2019-07-23 22:41:43,579 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9800 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 22:41:43,579 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 22:41:43,579 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 22:42:01,783 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9800 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 22:42:01,783 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 22:42:01,783 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 22:42:03,387 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.675 seconds (JVM running for 963.661)
2019-07-23 22:42:25,662 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 9800 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 22:42:25,662 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 22:42:25,664 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 23:04:44,806 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 4592 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 23:04:44,810 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 23:04:44,812 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 23:04:48,421 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 4.378 seconds (JVM running for 6.682)
2019-07-23 23:04:58,991 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message limit ? ,? ; 
2019-07-23 23:04:59,052 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 5(Integer)
2019-07-23 23:04:59,091 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-23 23:04:59,097 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-23 23:04:59,107 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-23 23:04:59,113 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 23:04:59,200 DEBUG (MessageController.java:34)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 5,
    "pageNum" : 1,
    "pageData" : null,
    "pageCount" : 0,
    "dataCount" : 0
  }
}
2019-07-23 23:05:56,031 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 4592 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 23:05:56,031 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 23:05:56,031 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 23:05:57,369 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.388 seconds (JVM running for 75.624)
2019-07-23 23:08:23,839 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message limit ? ,? ; 
2019-07-23 23:08:23,841 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 5(Integer)
2019-07-23 23:08:23,845 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-23 23:08:23,847 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-23 23:08:23,848 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-23 23:08:23,851 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 23:08:23,869 DEBUG (MessageController.java:34)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 5,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563350029000,
      "count" : 4
    }, {
      "messageId" : 2,
      "title" : "品红服务宗旨",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562900565000,
      "count" : 1
    }, {
      "messageId" : 5,
      "title" : "goodbye",
      "content" : "world",
      "writer" : "oltremare",
      "writeDate" : 1563496917000,
      "count" : 4
    }, {
      "messageId" : 12,
      "title" : "俺不知道",
      "content" : "无语 可以^-^ ",
      "writer" : "(●￣(ｴ)￣●)",
      "writeDate" : 1563331381000,
      "count" : 2
    }, {
      "messageId" : 16,
      "title" : "二维",
      "content" : "\r\n             恩恩存储   ",
      "writer" : "他他他他",
      "writeDate" : 1561943564000,
      "count" : 2
    } ],
    "pageCount" : 0,
    "dataCount" : 0
  }
}
2019-07-23 23:33:23,495 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message limit ? ,? ; 
2019-07-23 23:33:23,497 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 5(Integer)
2019-07-23 23:33:23,500 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-23 23:33:23,501 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-23 23:33:23,502 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-23 23:33:23,503 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 23:33:23,505 DEBUG (MessageController.java:34)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 5,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563350029000,
      "count" : 4
    }, {
      "messageId" : 2,
      "title" : "品红服务宗旨",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562900565000,
      "count" : 1
    }, {
      "messageId" : 5,
      "title" : "goodbye",
      "content" : "world",
      "writer" : "oltremare",
      "writeDate" : 1563496917000,
      "count" : 4
    }, {
      "messageId" : 12,
      "title" : "俺不知道",
      "content" : "无语 可以^-^ ",
      "writer" : "(●￣(ｴ)￣●)",
      "writeDate" : 1563331381000,
      "count" : 2
    }, {
      "messageId" : 16,
      "title" : "二维",
      "content" : "\r\n             恩恩存储   ",
      "writer" : "他他他他",
      "writeDate" : 1561943564000,
      "count" : 2
    } ],
    "pageCount" : 0,
    "dataCount" : 0
  }
}
2019-07-23 23:34:07,149 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message limit ? ,? ; 
2019-07-23 23:34:07,150 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 5(Integer)
2019-07-23 23:34:07,156 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-23 23:34:07,157 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-23 23:34:07,158 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-23 23:34:07,159 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 23:34:07,161 DEBUG (MessageController.java:34)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 5,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563350029000,
      "count" : 4
    }, {
      "messageId" : 2,
      "title" : "品红服务宗旨",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562900565000,
      "count" : 1
    }, {
      "messageId" : 5,
      "title" : "goodbye",
      "content" : "world",
      "writer" : "oltremare",
      "writeDate" : 1563496917000,
      "count" : 4
    }, {
      "messageId" : 12,
      "title" : "俺不知道",
      "content" : "无语 可以^-^ ",
      "writer" : "(●￣(ｴ)￣●)",
      "writeDate" : 1563331381000,
      "count" : 2
    }, {
      "messageId" : 16,
      "title" : "二维",
      "content" : "\r\n             恩恩存储   ",
      "writer" : "他他他他",
      "writeDate" : 1561943564000,
      "count" : 2
    } ],
    "pageCount" : 0,
    "dataCount" : 0
  }
}
2019-07-23 23:34:10,983 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message limit ? ,? ; 
2019-07-23 23:34:10,984 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 5(Integer)
2019-07-23 23:34:10,990 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-23 23:34:10,991 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-23 23:34:10,992 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-23 23:34:10,993 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 23:34:10,995 DEBUG (MessageController.java:34)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 5,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563350029000,
      "count" : 4
    }, {
      "messageId" : 2,
      "title" : "品红服务宗旨",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562900565000,
      "count" : 1
    }, {
      "messageId" : 5,
      "title" : "goodbye",
      "content" : "world",
      "writer" : "oltremare",
      "writeDate" : 1563496917000,
      "count" : 4
    }, {
      "messageId" : 12,
      "title" : "俺不知道",
      "content" : "无语 可以^-^ ",
      "writer" : "(●￣(ｴ)￣●)",
      "writeDate" : 1563331381000,
      "count" : 2
    }, {
      "messageId" : 16,
      "title" : "二维",
      "content" : "\r\n             恩恩存储   ",
      "writer" : "他他他他",
      "writeDate" : 1561943564000,
      "count" : 2
    } ],
    "pageCount" : 0,
    "dataCount" : 0
  }
}
2019-07-23 23:34:11,589 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message limit ? ,? ; 
2019-07-23 23:34:11,590 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 5(Integer)
2019-07-23 23:34:11,592 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-23 23:34:11,593 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-23 23:34:11,593 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-23 23:34:11,594 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 23:34:11,595 DEBUG (MessageController.java:34)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 5,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563350029000,
      "count" : 4
    }, {
      "messageId" : 2,
      "title" : "品红服务宗旨",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562900565000,
      "count" : 1
    }, {
      "messageId" : 5,
      "title" : "goodbye",
      "content" : "world",
      "writer" : "oltremare",
      "writeDate" : 1563496917000,
      "count" : 4
    }, {
      "messageId" : 12,
      "title" : "俺不知道",
      "content" : "无语 可以^-^ ",
      "writer" : "(●￣(ｴ)￣●)",
      "writeDate" : 1563331381000,
      "count" : 2
    }, {
      "messageId" : 16,
      "title" : "二维",
      "content" : "\r\n             恩恩存储   ",
      "writer" : "他他他他",
      "writeDate" : 1561943564000,
      "count" : 2
    } ],
    "pageCount" : 0,
    "dataCount" : 0
  }
}
2019-07-23 23:35:27,558 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message limit ? ,? ; 
2019-07-23 23:35:27,560 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 5(Integer)
2019-07-23 23:35:27,562 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-23 23:35:27,563 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-23 23:35:27,564 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-23 23:35:27,566 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 23:35:27,567 DEBUG (MessageController.java:34)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 5,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563350029000,
      "count" : 4
    }, {
      "messageId" : 2,
      "title" : "品红服务宗旨",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562900565000,
      "count" : 1
    }, {
      "messageId" : 5,
      "title" : "goodbye",
      "content" : "world",
      "writer" : "oltremare",
      "writeDate" : 1563496917000,
      "count" : 4
    }, {
      "messageId" : 12,
      "title" : "俺不知道",
      "content" : "无语 可以^-^ ",
      "writer" : "(●￣(ｴ)￣●)",
      "writeDate" : 1563331381000,
      "count" : 2
    }, {
      "messageId" : 16,
      "title" : "二维",
      "content" : "\r\n             恩恩存储   ",
      "writer" : "他他他他",
      "writeDate" : 1561943564000,
      "count" : 2
    } ],
    "pageCount" : 0,
    "dataCount" : 0
  }
}
2019-07-23 23:35:28,544 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message limit ? ,? ; 
2019-07-23 23:35:28,545 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 5(Integer)
2019-07-23 23:35:28,563 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-23 23:35:28,565 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-23 23:35:28,566 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-23 23:35:28,569 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 23:35:28,572 DEBUG (MessageController.java:34)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 5,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563350029000,
      "count" : 4
    }, {
      "messageId" : 2,
      "title" : "品红服务宗旨",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562900565000,
      "count" : 1
    }, {
      "messageId" : 5,
      "title" : "goodbye",
      "content" : "world",
      "writer" : "oltremare",
      "writeDate" : 1563496917000,
      "count" : 4
    }, {
      "messageId" : 12,
      "title" : "俺不知道",
      "content" : "无语 可以^-^ ",
      "writer" : "(●￣(ｴ)￣●)",
      "writeDate" : 1563331381000,
      "count" : 2
    }, {
      "messageId" : 16,
      "title" : "二维",
      "content" : "\r\n             恩恩存储   ",
      "writer" : "他他他他",
      "writeDate" : 1561943564000,
      "count" : 2
    } ],
    "pageCount" : 0,
    "dataCount" : 0
  }
}
2019-07-23 23:37:59,016 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message limit ? ,? ; 
2019-07-23 23:37:59,017 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 5(Integer)
2019-07-23 23:37:59,019 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-23 23:37:59,021 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-23 23:37:59,022 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-23 23:37:59,023 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 23:37:59,024 DEBUG (MessageController.java:34)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 5,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563350029000,
      "count" : 4
    }, {
      "messageId" : 2,
      "title" : "品红服务宗旨",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562900565000,
      "count" : 1
    }, {
      "messageId" : 5,
      "title" : "goodbye",
      "content" : "world",
      "writer" : "oltremare",
      "writeDate" : 1563496917000,
      "count" : 4
    }, {
      "messageId" : 12,
      "title" : "俺不知道",
      "content" : "无语 可以^-^ ",
      "writer" : "(●￣(ｴ)￣●)",
      "writeDate" : 1563331381000,
      "count" : 2
    }, {
      "messageId" : 16,
      "title" : "二维",
      "content" : "\r\n             恩恩存储   ",
      "writer" : "他他他他",
      "writeDate" : 1561943564000,
      "count" : 2
    } ],
    "pageCount" : 0,
    "dataCount" : 0
  }
}
2019-07-23 23:38:01,469 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message limit ? ,? ; 
2019-07-23 23:38:01,470 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: -5(Integer), 5(Integer)
2019-07-23 23:38:01,568 ERROR (BaseController.java:285)- 系统异常:
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-5 ,5' at line 1
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT * FROM message limit ? ,? ;
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-5 ,5' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-5 ,5' at line 1
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-5 ,5' at line 1
### The error may exist in com/zryx/company/mapper/MessageMapper.xml
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT * FROM message limit ? ,? ;
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-5 ,5' at line 1
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-5 ,5' at line 1
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy64.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy84.getMessageByPage(Unknown Source)
	at com.zryx.company.service.imp.MessageServiceImpl.getMessageByPage(MessageServiceImpl.java:72)
	at com.zryx.company.controller.MessageController.initMessage(MessageController.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:853)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1587)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-5 ,5' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor87.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy80.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 62 common frames omitted
2019-07-23 23:44:24,666 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message limit ? ,? ; 
2019-07-23 23:44:24,668 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 5(Integer)
2019-07-23 23:44:24,670 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-23 23:44:24,672 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-23 23:44:24,672 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-23 23:44:24,674 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 23:44:24,677 DEBUG (MessageController.java:34)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 5,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563350029000,
      "count" : 4
    }, {
      "messageId" : 2,
      "title" : "品红服务宗旨",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562900565000,
      "count" : 1
    }, {
      "messageId" : 5,
      "title" : "goodbye",
      "content" : "world",
      "writer" : "oltremare",
      "writeDate" : 1563496917000,
      "count" : 4
    }, {
      "messageId" : 12,
      "title" : "俺不知道",
      "content" : "无语 可以^-^ ",
      "writer" : "(●￣(ｴ)￣●)",
      "writeDate" : 1563331381000,
      "count" : 2
    }, {
      "messageId" : 16,
      "title" : "二维",
      "content" : "\r\n             恩恩存储   ",
      "writer" : "他他他他",
      "writeDate" : 1561943564000,
      "count" : 2
    } ],
    "pageCount" : 0,
    "dataCount" : 0
  }
}
2019-07-23 23:45:11,500 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message limit ? ,? ; 
2019-07-23 23:45:11,501 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 5(Integer)
2019-07-23 23:45:11,503 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-23 23:45:11,504 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-23 23:45:11,505 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-23 23:45:11,506 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 23:45:11,507 DEBUG (MessageController.java:34)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 5,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563350029000,
      "count" : 4
    }, {
      "messageId" : 2,
      "title" : "品红服务宗旨",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562900565000,
      "count" : 1
    }, {
      "messageId" : 5,
      "title" : "goodbye",
      "content" : "world",
      "writer" : "oltremare",
      "writeDate" : 1563496917000,
      "count" : 4
    }, {
      "messageId" : 12,
      "title" : "俺不知道",
      "content" : "无语 可以^-^ ",
      "writer" : "(●￣(ｴ)￣●)",
      "writeDate" : 1563331381000,
      "count" : 2
    }, {
      "messageId" : 16,
      "title" : "二维",
      "content" : "\r\n             恩恩存储   ",
      "writer" : "他他他他",
      "writeDate" : 1561943564000,
      "count" : 2
    } ],
    "pageCount" : 0,
    "dataCount" : 0
  }
}
2019-07-23 23:45:15,282 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message limit ? ,? ; 
2019-07-23 23:45:15,283 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 5(Integer)
2019-07-23 23:45:15,286 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-23 23:45:15,287 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-23 23:45:15,288 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-23 23:45:15,290 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 23:45:15,291 DEBUG (MessageController.java:34)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 5,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563350029000,
      "count" : 4
    }, {
      "messageId" : 2,
      "title" : "品红服务宗旨",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562900565000,
      "count" : 1
    }, {
      "messageId" : 5,
      "title" : "goodbye",
      "content" : "world",
      "writer" : "oltremare",
      "writeDate" : 1563496917000,
      "count" : 4
    }, {
      "messageId" : 12,
      "title" : "俺不知道",
      "content" : "无语 可以^-^ ",
      "writer" : "(●￣(ｴ)￣●)",
      "writeDate" : 1563331381000,
      "count" : 2
    }, {
      "messageId" : 16,
      "title" : "二维",
      "content" : "\r\n             恩恩存储   ",
      "writer" : "他他他他",
      "writeDate" : 1561943564000,
      "count" : 2
    } ],
    "pageCount" : 0,
    "dataCount" : 0
  }
}
2019-07-23 23:46:39,704 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message limit ? ,? ; 
2019-07-23 23:46:39,705 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 5(Integer)
2019-07-23 23:46:39,708 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-23 23:46:39,709 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-23 23:46:39,710 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-23 23:46:39,711 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 23:46:39,713 DEBUG (MessageController.java:34)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 5,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563350029000,
      "count" : 4
    }, {
      "messageId" : 2,
      "title" : "品红服务宗旨",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562900565000,
      "count" : 1
    }, {
      "messageId" : 5,
      "title" : "goodbye",
      "content" : "world",
      "writer" : "oltremare",
      "writeDate" : 1563496917000,
      "count" : 4
    }, {
      "messageId" : 12,
      "title" : "俺不知道",
      "content" : "无语 可以^-^ ",
      "writer" : "(●￣(ｴ)￣●)",
      "writeDate" : 1563331381000,
      "count" : 2
    }, {
      "messageId" : 16,
      "title" : "二维",
      "content" : "\r\n             恩恩存储   ",
      "writer" : "他他他他",
      "writeDate" : 1561943564000,
      "count" : 2
    } ],
    "pageCount" : 0,
    "dataCount" : 0
  }
}
2019-07-23 23:51:45,051 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 4592 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 23:51:45,051 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 23:51:45,052 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 23:51:46,328 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.323 seconds (JVM running for 2824.583)
2019-07-23 23:51:46,496 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message limit ? ,? ; 
2019-07-23 23:51:46,503 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 5(Integer)
2019-07-23 23:51:46,506 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-23 23:51:46,509 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-23 23:51:46,510 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-23 23:51:46,512 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 23:51:46,525 DEBUG (MessageController.java:34)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 5,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563350029000,
      "count" : 4
    }, {
      "messageId" : 2,
      "title" : "品红服务宗旨",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562900565000,
      "count" : 1
    }, {
      "messageId" : 5,
      "title" : "goodbye",
      "content" : "world",
      "writer" : "oltremare",
      "writeDate" : 1563496917000,
      "count" : 4
    }, {
      "messageId" : 12,
      "title" : "俺不知道",
      "content" : "无语 可以^-^ ",
      "writer" : "(●￣(ｴ)￣●)",
      "writeDate" : 1563331381000,
      "count" : 2
    }, {
      "messageId" : 16,
      "title" : "二维",
      "content" : "\r\n             恩恩存储   ",
      "writer" : "他他他他",
      "writeDate" : 1561943564000,
      "count" : 2
    } ],
    "pageCount" : 0,
    "dataCount" : 0
  }
}
2019-07-23 23:53:53,043 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 4592 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 23:53:53,044 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 23:53:53,044 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 23:53:55,930 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 3.184 seconds (JVM running for 2954.185)
2019-07-23 23:54:45,076 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 4592 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 23:54:45,077 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 23:54:45,077 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 23:54:46,130 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.088 seconds (JVM running for 3004.384)
2019-07-23 23:55:56,249 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message limit ? ,? ; 
2019-07-23 23:55:56,251 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 5(Integer)
2019-07-23 23:55:56,253 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-23 23:55:56,254 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-23 23:55:56,256 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-23 23:55:56,258 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 23:55:56,274 DEBUG (MessageController.java:34)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 5,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563350029000,
      "count" : 4
    }, {
      "messageId" : 2,
      "title" : "品红服务宗旨",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562900565000,
      "count" : 1
    }, {
      "messageId" : 5,
      "title" : "goodbye",
      "content" : "world",
      "writer" : "oltremare",
      "writeDate" : 1563496917000,
      "count" : 4
    }, {
      "messageId" : 12,
      "title" : "俺不知道",
      "content" : "无语 可以^-^ ",
      "writer" : "(●￣(ｴ)￣●)",
      "writeDate" : 1563331381000,
      "count" : 2
    }, {
      "messageId" : 16,
      "title" : "二维",
      "content" : "\r\n             恩恩存储   ",
      "writer" : "他他他他",
      "writeDate" : 1561943564000,
      "count" : 2
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-23 23:57:36,574 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message limit ? ,? ; 
2019-07-23 23:57:36,577 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 5(Integer), 5(Integer)
2019-07-23 23:57:36,580 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 2
2019-07-23 23:57:36,582 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-23 23:57:36,582 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-23 23:57:36,592 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 23:57:36,596 DEBUG (MessageController.java:34)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 5,
    "pageNum" : 2,
    "pageData" : [ {
      "messageId" : 17,
      "title" : "hello",
      "content" : "我肥来了",
      "writer" : "jry",
      "writeDate" : 1563811200000,
      "count" : 0
    }, {
      "messageId" : 18,
      "title" : "try",
      "content" : "哈哈哈哈哈哈哈哈哈",
      "writer" : "okk",
      "writeDate" : 1563897600000,
      "count" : 0
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-23 23:57:38,911 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT * FROM message limit ? ,? ; 
2019-07-23 23:57:38,912 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 0(Integer), 5(Integer)
2019-07-23 23:57:38,914 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 5
2019-07-23 23:57:38,915 DEBUG (BaseJdbcLogger.java:143)- ==>  Preparing: SELECT COUNT(*) FROM message 
2019-07-23 23:57:38,916 DEBUG (BaseJdbcLogger.java:143)- ==> Parameters: 
2019-07-23 23:57:38,917 DEBUG (BaseJdbcLogger.java:143)- <==      Total: 1
2019-07-23 23:57:38,918 DEBUG (MessageController.java:34)- Json-->{
  "msg" : "查询成功",
  "code" : 0,
  "data" : {
    "pageSize" : 5,
    "pageNum" : 1,
    "pageData" : [ {
      "messageId" : 1,
      "title" : "价格最低的MP4",
      "content" : "价格最低的MP4是什么牌子？价格是多少？",
      "writer" : "zzg",
      "writeDate" : 1563350029000,
      "count" : 4
    }, {
      "messageId" : 2,
      "title" : "品红服务宗旨",
      "content" : "品红服务宗旨是：为用户服务",
      "writer" : "bobo",
      "writeDate" : 1562900565000,
      "count" : 1
    }, {
      "messageId" : 5,
      "title" : "goodbye",
      "content" : "world",
      "writer" : "oltremare",
      "writeDate" : 1563496917000,
      "count" : 4
    }, {
      "messageId" : 12,
      "title" : "俺不知道",
      "content" : "无语 可以^-^ ",
      "writer" : "(●￣(ｴ)￣●)",
      "writeDate" : 1563331381000,
      "count" : 2
    }, {
      "messageId" : 16,
      "title" : "二维",
      "content" : "\r\n             恩恩存储   ",
      "writer" : "他他他他",
      "writeDate" : 1561943564000,
      "count" : 2
    } ],
    "pageCount" : 2,
    "dataCount" : 7
  }
}
2019-07-23 23:57:39,509 INFO (StartupInfoLogger.java:50)- Starting CompanyApplication on AMB0E378IIS4OL4 with PID 4592 (C:\Users\Administrator\IdeaProjects\company\target\classes started by Jerry in C:\Users\Administrator\IdeaProjects\company)
2019-07-23 23:57:39,509 DEBUG (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.6.RELEASE, Spring v5.1.8.RELEASE
2019-07-23 23:57:39,509 INFO (SpringApplication.java:646)- No active profile set, falling back to default profiles: default
2019-07-23 23:57:40,919 INFO (StartupInfoLogger.java:59)- Started CompanyApplication in 1.449 seconds (JVM running for 3179.174)
